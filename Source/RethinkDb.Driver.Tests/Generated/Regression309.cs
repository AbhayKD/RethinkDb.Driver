




//AUTOGENERATED, DO NOTMODIFY.
//Do not edit this file directly.

#pragma warning disable 1591
// ReSharper disable CheckNamespace

using System;
using System.Linq;
using System.Collections;
using System.Collections.Generic;
using RethinkDb.Driver.Model;
using RethinkDb.Driver.Ast;
using NUnit.Framework;
using RethinkDb.Driver.Tests;

namespace RethinkDb.Driver.Test.Generated {
    [TestFixture]
    public class Regression309 : GeneratedTest {

            public static Table t = r.db(DbName).table("t");


        [Test]
        public void YamlTest(){

             TestCounter++;
             
             {
                 //JavaQuery, regression/309.yaml, #1
                 /* ExpectedOriginal: None */
                 var expected_ = null as object;
                 
                 /* Original: t.insert([{'id':0}, {'id':1}]) */
                 var obtained = runOrCatch( t.insert(r.array(r.hashMap("id", 0), r.hashMap("id", 1))) ,
                                            new OptArgs()
                    );
                 assertEquals(expected_, obtained);
             }
             
             TestCounter++;
             
             {
                 //JavaQuery, regression/309.yaml, #2
                 /* ExpectedOriginal: bag([{'id':0}, {'id':1}, 2, 3, 4]) */
                 var expected_ = bag(r.array(r.hashMap("id", 0), r.hashMap("id", 1), 2, 3, 4));
                 
                 /* Original: t.union([2,3,4]) */
                 var obtained = runOrCatch( t.union(r.array(2, 3, 4)) ,
                                            new OptArgs()
                    );
                 assertEquals(expected_, obtained);
             }
             
             TestCounter++;
             
             {
                 //JavaQuery, regression/309.yaml, #3
                 /* ExpectedOriginal: bag([{'id':0}, {'id':1}, 2, 3, 4]) */
                 var expected_ = bag(r.array(r.hashMap("id", 0), r.hashMap("id", 1), 2, 3, 4));
                 
                 /* Original: r.expr([2,3,4]).union(t) */
                 var obtained = runOrCatch( r.expr(r.array(2, 3, 4)).union(t) ,
                                            new OptArgs()
                    );
                 assertEquals(expected_, obtained);
             }
             

        }
    }
}
