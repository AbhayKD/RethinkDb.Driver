




//AUTOGENERATED, DO NOTMODIFY.
//Do not edit this file directly.

#pragma warning disable 1591
// ReSharper disable CheckNamespace

using System;
using System.Linq;
using System.Collections;
using System.Collections.Generic;
using RethinkDb.Driver.Model;
using RethinkDb.Driver.Ast;
using NUnit.Framework;
using RethinkDb.Driver.Tests;

namespace RethinkDb.Driver.Test.Generated {
    [TestFixture]
    public class Regression3057 : GeneratedTest {



        [Test]
        public void YamlTest(){

             TestCounter++;
             
             {
                 //JavaQuery, regression/3057.yaml, #1
                 /* ExpectedOriginal: (false) */
                 var expected_ = false;
                 
                 /* Original: r.polygon([0,0], [0,10], [10, 10], [10, 0]).polygon_sub(r.polygon([0,0], [0,10], [10, 10], [10, 0])).intersects(r.point(0,0)) */
                 var obtained = runOrCatch( r.polygon(r.array(0, 0), r.array(0, 10), r.array(10, 10), r.array(10, 0)).polygonSub(r.polygon(r.array(0, 0), r.array(0, 10), r.array(10, 10), r.array(10, 0))).intersects(r.point(0, 0)) ,
                                            new OptArgs()
                    );
                 assertEquals(expected_, obtained);
             }
             
             TestCounter++;
             
             {
                 //JavaQuery, regression/3057.yaml, #2
                 /* ExpectedOriginal: (false) */
                 var expected_ = false;
                 
                 /* Original: r.polygon([0,0], [0,10], [10, 10], [10, 0]).polygon_sub(r.polygon([0,0], [0,10], [10, 10], [10, 0])).intersects(r.polygon([0,0], [0,10], [10, 10], [10, 0])) */
                 var obtained = runOrCatch( r.polygon(r.array(0, 0), r.array(0, 10), r.array(10, 10), r.array(10, 0)).polygonSub(r.polygon(r.array(0, 0), r.array(0, 10), r.array(10, 10), r.array(10, 0))).intersects(r.polygon(r.array(0, 0), r.array(0, 10), r.array(10, 10), r.array(10, 0))) ,
                                            new OptArgs()
                    );
                 assertEquals(expected_, obtained);
             }
             
             TestCounter++;
             
             {
                 //JavaQuery, regression/3057.yaml, #3
                 /* ExpectedOriginal: (false) */
                 var expected_ = false;
                 
                 /* Original: r.polygon([0,0], [0,10], [10, 10], [10, 0]).polygon_sub(r.polygon([0,0], [0,10], [10, 10], [10, 0])).intersects(r.line([0,0], [0,10])) */
                 var obtained = runOrCatch( r.polygon(r.array(0, 0), r.array(0, 10), r.array(10, 10), r.array(10, 0)).polygonSub(r.polygon(r.array(0, 0), r.array(0, 10), r.array(10, 10), r.array(10, 0))).intersects(r.line(r.array(0, 0), r.array(0, 10))) ,
                                            new OptArgs()
                    );
                 assertEquals(expected_, obtained);
             }
             
             TestCounter++;
             
             {
                 //JavaQuery, regression/3057.yaml, #4
                 /* ExpectedOriginal: (false) */
                 var expected_ = false;
                 
                 /* Original: r.polygon([0,0], [0,10], [10, 10], [10, 0]).intersects(r.polygon([0,0], [0,10], [10, 10], [10, 0]).polygon_sub(r.polygon([0,0], [0,10], [10, 10], [10, 0]))) */
                 var obtained = runOrCatch( r.polygon(r.array(0, 0), r.array(0, 10), r.array(10, 10), r.array(10, 0)).intersects(r.polygon(r.array(0, 0), r.array(0, 10), r.array(10, 10), r.array(10, 0)).polygonSub(r.polygon(r.array(0, 0), r.array(0, 10), r.array(10, 10), r.array(10, 0)))) ,
                                            new OptArgs()
                    );
                 assertEquals(expected_, obtained);
             }
             

        }
    }
}
