




//AUTOGENERATED, DO NOTMODIFY.
//Do not edit this file directly.

#pragma warning disable 1591
// ReSharper disable CheckNamespace

using System;
using System.Linq;
using System.Collections;
using System.Collections.Generic;
using RethinkDb.Driver.Model;
using RethinkDb.Driver.Ast;
using NUnit.Framework;
using RethinkDb.Driver.Tests;

namespace RethinkDb.Driver.Test.Generated {
    [TestFixture]
    public class MathLogicSub : GeneratedTest {



        [Test]
        public void YamlTest(){

             TestCounter++;
             
             {
                 //JavaQuery, math_logic/sub.yaml, #1
                 //ExpectedOriginal: 0
                 var expected = 0;
                 
                 //Original: (r.expr(1) - 1)
                 var obtained = runOrCatch( r.sub(r.expr(1), 1) ,
                                            new OptArgs()
                    );
                 assertEquals(expected, obtained);
             }
             
             TestCounter++;
             
             {
                 //JavaQuery, math_logic/sub.yaml, #1
                 //ExpectedOriginal: 0
                 var expected = 0;
                 
                 //Original: (1 - r.expr(1))
                 var obtained = runOrCatch( r.sub(1, r.expr(1)) ,
                                            new OptArgs()
                    );
                 assertEquals(expected, obtained);
             }
             
             TestCounter++;
             
             {
                 //JavaQuery, math_logic/sub.yaml, #1
                 //ExpectedOriginal: 0
                 var expected = 0;
                 
                 //Original: (r.expr(1).sub(1))
                 var obtained = runOrCatch( r.expr(1).sub(1) ,
                                            new OptArgs()
                    );
                 assertEquals(expected, obtained);
             }
             
             TestCounter++;
             
             {
                 //JavaQuery, math_logic/sub.yaml, #2
                 //ExpectedOriginal: -2
                 var expected = -2;
                 
                 //Original: r.expr(-1) - 1
                 var obtained = runOrCatch( r.sub(r.expr(-1), 1) ,
                                            new OptArgs()
                    );
                 assertEquals(expected, obtained);
             }
             
             TestCounter++;
             
             {
                 //JavaQuery, math_logic/sub.yaml, #3
                 //ExpectedOriginal: -6.75
                 var expected = -6.75;
                 
                 //Original: r.expr(1.75) - 8.5
                 var obtained = runOrCatch( r.sub(r.expr(1.75), 8.5) ,
                                            new OptArgs()
                    );
                 assertEquals(expected, obtained);
             }
             
             TestCounter++;
             
             {
                 //JavaQuery, math_logic/sub.yaml, #5
                 //ExpectedOriginal: err('ReqlQueryLogicError', 'Expected type NUMBER but found STRING.', [0])
                 var expected = err("ReqlQueryLogicError", "Expected type NUMBER but found STRING.", Arrays.asList(0));
                 
                 //Original: r.expr('a') - 0.8
                 var obtained = runOrCatch( r.sub(r.expr("a"), 0.8) ,
                                            new OptArgs()
                    );
                 assertEquals(expected, obtained);
             }
             
             TestCounter++;
             
             {
                 //JavaQuery, math_logic/sub.yaml, #6
                 //ExpectedOriginal: err('ReqlQueryLogicError', 'Expected type NUMBER but found STRING.', [1])
                 var expected = err("ReqlQueryLogicError", "Expected type NUMBER but found STRING.", Arrays.asList(1));
                 
                 //Original: r.expr(1) - 'a'
                 var obtained = runOrCatch( r.sub(r.expr(1), "a") ,
                                            new OptArgs()
                    );
                 assertEquals(expected, obtained);
             }
             
             TestCounter++;
             
             {
                 //JavaQuery, math_logic/sub.yaml, #7
                 //ExpectedOriginal: err('ReqlQueryLogicError', 'Expected type NUMBER but found STRING.', [0])
                 var expected = err("ReqlQueryLogicError", "Expected type NUMBER but found STRING.", Arrays.asList(0));
                 
                 //Original: r.expr('b') - 'a'
                 var obtained = runOrCatch( r.sub(r.expr("b"), "a") ,
                                            new OptArgs()
                    );
                 assertEquals(expected, obtained);
             }
             

        }
    }
}
