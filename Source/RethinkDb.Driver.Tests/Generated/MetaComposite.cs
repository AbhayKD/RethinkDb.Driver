




//AUTOGENERATED, DO NOTMODIFY.
//Do not edit this file directly.

#pragma warning disable 1591
// ReSharper disable CheckNamespace

using System;
using System.Linq;
using System.Collections;
using System.Collections.Generic;
using RethinkDb.Driver.Model;
using RethinkDb.Driver.Ast;
using NUnit.Framework;
using RethinkDb.Driver.Tests;

namespace RethinkDb.Driver.Test.Generated {
    [TestFixture]
    public class MetaComposite : GeneratedTest {

        public MetaComposite (){
        }




        [Test]
        public void YamlTest(){

             TestCounter++;
             
             {
                 //JavaQuery, meta/composite.yaml, #1
                 /* ExpectedOriginal: partial({'dbs_dropped':1}) */
                 var expected_ = partial(r.hashMap("dbs_dropped", 1L));
                 
                 /* Original: r.db_drop('test') */
                 var obtained = runOrCatch( r.dbDrop("test") ,
                                            new OptArgs()
                    );
                 assertEquals(expected_, obtained);
             }
             
             TestCounter++;
             
             {
                 //JavaQuery, meta/composite.yaml, #3
                 /* ExpectedOriginal: partial({'tables_created':9}) */
                 var expected_ = partial(r.hashMap("tables_created", 9L));
                 
                 /* Original: r.db_list().set_difference(["rethinkdb"]).for_each(lambda db_name:
    r.expr([1,2,3]).for_each(lambda i:
        r.db(db_name).table_create('tbl_' + i.coerce_to('string'))))
 */
                 var obtained = runOrCatch( r.dbList().setDifference(r.array("rethinkdb")).forEach(db_name => r.expr(r.array(1L, 2L, 3L)).forEach(i => r.db(db_name).tableCreate(r.add("tbl_", i.coerceTo("string"))))) ,
                                            new OptArgs()
                    );
                 assertEquals(expected_, obtained);
             }
             
             TestCounter++;
             
             {
                 //JavaQuery, meta/composite.yaml, #5
                 /* ExpectedOriginal: partial({'dbs_created':1}) */
                 var expected_ = partial(r.hashMap("dbs_created", 1L));
                 
                 /* Original: r.db_create('test') */
                 var obtained = runOrCatch( r.dbCreate("test") ,
                                            new OptArgs()
                    );
                 assertEquals(expected_, obtained);
             }
             

        }
    }
}
