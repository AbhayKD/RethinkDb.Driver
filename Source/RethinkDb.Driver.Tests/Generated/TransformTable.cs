




//AUTOGENERATED, DO NOTMODIFY.
//Do not edit this file directly.

#pragma warning disable 1591
// ReSharper disable CheckNamespace

using System;
using System.Linq;
using System.Collections;
using System.Collections.Generic;
using RethinkDb.Driver.Model;
using RethinkDb.Driver.Ast;
using NUnit.Framework;
using RethinkDb.Driver.Tests;

namespace RethinkDb.Driver.Test.Generated {
    [TestFixture]
    public class TransformTable : GeneratedTest {

            public static Table tbl = r.db(DbName).table("tbl");


        [Test]
        public void YamlTest(){

             TestCounter++;
             
             {
                 //JavaQuery, transform/table.yaml, #1
                 /* ExpectedOriginal: None */
                 var expected_ = null as object;
                 
                 /* Original: tbl.insert([{"a":["k1","v1"]},{"a":["k2","v2"]}]) */
                 var obtained = runOrCatch( tbl.insert(r.array(r.hashMap("a", r.array("k1", "v1")), r.hashMap("a", r.array("k2", "v2")))) ,
                                            new OptArgs()
                    );
                 assertEquals(expected_, obtained);
             }
             
             TestCounter++;
             
             {
                 //JavaQuery, transform/table.yaml, #3
                 /* ExpectedOriginal: "SELECTION<STREAM>" */
                 var expected_ = "SELECTION<STREAM>";
                 
                 /* Original: tbl.limit(1).type_of() */
                 var obtained = runOrCatch( tbl.limit(1L).typeOf() ,
                                            new OptArgs()
                    );
                 assertEquals(expected_, obtained);
             }
             
             TestCounter++;
             
             {
                 //JavaQuery, transform/table.yaml, #4
                 /* ExpectedOriginal: "ARRAY" */
                 var expected_ = "ARRAY";
                 
                 /* Original: tbl.limit(1).coerce_to('array').type_of() */
                 var obtained = runOrCatch( tbl.limit(1L).coerceTo("array").typeOf() ,
                                            new OptArgs()
                    );
                 assertEquals(expected_, obtained);
             }
             

        }
    }
}
