




//AUTOGENERATED, DO NOTMODIFY.
//Do not edit this file directly.

#pragma warning disable 1591
// ReSharper disable CheckNamespace

using System;
using System.Linq;
using System.Collections;
using System.Collections.Generic;
using RethinkDb.Driver.Model;
using RethinkDb.Driver.Ast;
using NUnit.Framework;
using RethinkDb.Driver.Tests;

namespace RethinkDb.Driver.Test.Generated {
    [TestFixture]
    public class Regression2838 : GeneratedTest {

            public static Table tbl = r.db(DbName).table("tbl");


        [Test]
        public void YamlTest(){

             TestCounter++;
             
             {
                 //JavaQuery, regression/2838.yaml, #1
                 /* ExpectedOriginal: ({'inserted':99}) */
                 var expected_ = r.hashMap("inserted", 99L);
                 
                 /* Original: tbl.insert([{'result':i} for i in range(1,100)]).pluck('first_error', 'inserted') */
                 var obtained = runOrCatch( tbl.insert(EnumerableLRange(1L, 100L).Select(i => r.hashMap("result", i)).ToList()).pluck("first_error", "inserted") ,
                                            new OptArgs()
                    );
                 assertEquals(expected_, obtained);
             }
             
             TestCounter++;
             
             {
                 //JavaQuery, regression/2838.yaml, #2
                 /* ExpectedOriginal: (40) */
                 var expected_ = 40L;
                 
                 /* Original: tbl.update({'foo':'bar'}, return_changes=True)['changes'].count() */
                 var obtained = runOrCatch( tbl.update(r.hashMap("foo", "bar")).optArg("return_changes", true).g("changes").count() ,
                                            new OptArgs()
                     .with("array_limit", 40L)
                    );
                 assertEquals(expected_, obtained);
             }
             
             TestCounter++;
             
             {
                 //JavaQuery, regression/2838.yaml, #3
                 /* ExpectedOriginal: (['Too many changes, array truncated to 40.']) */
                 var expected_ = r.array("Too many changes, array truncated to 40.");
                 
                 /* Original: tbl.update({'foo':'quux'}, return_changes=True)['warnings'] */
                 var obtained = runOrCatch( tbl.update(r.hashMap("foo", "quux")).optArg("return_changes", true).g("warnings") ,
                                            new OptArgs()
                     .with("array_limit", 40L)
                    );
                 assertEquals(expected_, obtained);
             }
             

        }
    }
}
