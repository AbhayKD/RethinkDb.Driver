




//AUTOGENERATED, DO NOTMODIFY.
//Do not edit this file directly.

#pragma warning disable 1591
// ReSharper disable CheckNamespace

using System;
using System.Linq;
using System.Collections;
using System.Collections.Generic;
using RethinkDb.Driver.Model;
using RethinkDb.Driver.Ast;
using NUnit.Framework;
using RethinkDb.Driver.Tests;

namespace RethinkDb.Driver.Test.Generated {
    [TestFixture]
    public class Regression665 : GeneratedTest {

        public Regression665 (){
        }




        [Test]
        public void YamlTest(){

             
             //JavaDef, regression/665.yaml, #Templates.YamlTest+DefTest.
             //Original: t = r.db('test').table('t665')
             
var t = (Table) (r.db("test").table("t665"));             
             TestCounter++;
             
             {
                 //JavaQuery, regression/665.yaml, #1
                 /* ExpectedOriginal: None */
                 var expected_ = null as object;
                 
                 /* Original: r.db('test').table_create('t665') */
                 var obtained = runOrCatch( r.db("test").tableCreate("t665") ,
                                            new OptArgs()
                    );
                 assertEquals(expected_, obtained);
             }
             
             TestCounter++;
             
             {
                 //JavaQuery, regression/665.yaml, #2
                 /* ExpectedOriginal: ({'unchanged':0, 'skipped':0, 'replaced':0, 'inserted':2, 'errors':0, 'deleted':0 }) */
                 var expected_ = r.hashMap("unchanged", 0L).with("skipped", 0L).with("replaced", 0L).with("inserted", 2L).with("errors", 0L).with("deleted", 0L);
                 
                 /* Original: t.insert([{'id':1}, {'id':4}]) */
                 var obtained = runOrCatch( t.insert(r.array(r.hashMap("id", 1L), r.hashMap("id", 4L))) ,
                                            new OptArgs()
                    );
                 assertEquals(expected_, obtained);
             }
             
             TestCounter++;
             
             {
                 //JavaQuery, regression/665.yaml, #3
                 /* ExpectedOriginal: None */
                 var expected_ = null as object;
                 
                 /* Original: r.db('test').table_drop('t665') */
                 var obtained = runOrCatch( r.db("test").tableDrop("t665") ,
                                            new OptArgs()
                    );
                 assertEquals(expected_, obtained);
             }
             

        }
    }
}
