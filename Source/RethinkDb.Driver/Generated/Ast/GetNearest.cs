










//AUTOGENERATED, DO NOTMODIFY.
//Do not edit this file directly.

#pragma warning disable 1591
// ReSharper disable CheckNamespace

using System;
using RethinkDb.Driver.Ast;
using RethinkDb.Driver.Model;
using RethinkDb.Driver.Proto;
using System.Collections.Generic;


namespace RethinkDb.Driver.Ast {

    public class GetNearest : ReqlExpr {

    
    
    
/// <summary>
/// Get all documents where the specified geospatial index is within a certain distance of the specified point (default 100 kilometers).
/// </summary>
/// <example><strong>Example:</strong> Return a list of enemy hideouts within 5000 meters of the secret base.
/// <code>var secretBase = r.point(-122.422876,37.777128);
/// r.table('hideouts').getNearest(secretBase,
///     {index: 'location', maxDist: 5000}
/// ).run(conn, callback)
/// </code></example>
        public GetNearest (object arg) : this(new Arguments(arg), null) {
        }
/// <summary>
/// Get all documents where the specified geospatial index is within a certain distance of the specified point (default 100 kilometers).
/// </summary>
/// <example><strong>Example:</strong> Return a list of enemy hideouts within 5000 meters of the secret base.
/// <code>var secretBase = r.point(-122.422876,37.777128);
/// r.table('hideouts').getNearest(secretBase,
///     {index: 'location', maxDist: 5000}
/// ).run(conn, callback)
/// </code></example>
        public GetNearest (Arguments args) : this(args, null) {
        }
/// <summary>
/// Get all documents where the specified geospatial index is within a certain distance of the specified point (default 100 kilometers).
/// </summary>
/// <example><strong>Example:</strong> Return a list of enemy hideouts within 5000 meters of the secret base.
/// <code>var secretBase = r.point(-122.422876,37.777128);
/// r.table('hideouts').getNearest(secretBase,
///     {index: 'location', maxDist: 5000}
/// ).run(conn, callback)
/// </code></example>
        public GetNearest (Arguments args, OptArgs optargs)
             : this(TermType.GET_NEAREST, args, optargs) {
        }

    protected GetNearest (TermType termType, Arguments args, OptArgs optargs) : base(termType, args, optargs)
    {
    }


    



    

    


    
    }
}
