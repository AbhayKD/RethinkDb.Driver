












//AUTOGENERATED, DO NOTMODIFY.
//Do not edit this file directly.

#pragma warning disable 1591
// ReSharper disable CheckNamespace

using System;
using RethinkDb.Driver.Ast;
using RethinkDb.Driver.Model;
using RethinkDb.Driver.Proto;
using System.Collections;
using System.Collections.Generic;


namespace RethinkDb.Driver.Ast {

    public class Bracket : ReqlExpr {

    
    
    
/// <summary>
/// <para>Get a single field from an object or a single element from a sequence.</para>
/// </summary>
/// <example><para>Example: What was Iron Man's first appearance in a comic?</para>
/// <code>r.table('marvel').get('IronMan')('firstAppearance').run(conn, callback)
/// </code></example>
        public Bracket (object arg) : this(new Arguments(arg), null) {
        }
/// <summary>
/// <para>Get a single field from an object or a single element from a sequence.</para>
/// </summary>
/// <example><para>Example: What was Iron Man's first appearance in a comic?</para>
/// <code>r.table('marvel').get('IronMan')('firstAppearance').run(conn, callback)
/// </code></example>
        public Bracket (Arguments args) : this(args, null) {
        }
/// <summary>
/// <para>Get a single field from an object or a single element from a sequence.</para>
/// </summary>
/// <example><para>Example: What was Iron Man's first appearance in a comic?</para>
/// <code>r.table('marvel').get('IronMan')('firstAppearance').run(conn, callback)
/// </code></example>
        public Bracket (Arguments args, object optargs)
             : this(TermType.BRACKET, args, optargs) {
        }

    protected Bracket (TermType termType, Arguments args, object optargs) : base(termType, args, optargs)
    {
    }


    



    


    

    


    
    }
}
