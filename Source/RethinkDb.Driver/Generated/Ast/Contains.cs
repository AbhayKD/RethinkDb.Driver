










//AUTOGENERATED, DO NOTMODIFY.
//Do not edit this file directly.

#pragma warning disable 1591
// ReSharper disable CheckNamespace

using System;
using RethinkDb.Driver.Ast;
using RethinkDb.Driver.Model;
using RethinkDb.Driver.Proto;
using System.Collections.Generic;


namespace RethinkDb.Driver.Ast {

    public class Contains : ReqlExpr {

    
    
    
/// <summary>
/// Returns whether or not a sequence contains all the specified values, or if functions are
/// provided instead, returns whether or not a sequence contains values matching all the
/// specified functions.
/// </summary>
/// <example><strong>Example:</strong> Has Iron Man ever fought Superman?
/// <code>r.table('marvel').get('ironman')('opponents').contains('superman').run(conn, callback)
/// </code></example>
        public Contains (object arg) : this(new Arguments(arg), null) {
        }
/// <summary>
/// Returns whether or not a sequence contains all the specified values, or if functions are
/// provided instead, returns whether or not a sequence contains values matching all the
/// specified functions.
/// </summary>
/// <example><strong>Example:</strong> Has Iron Man ever fought Superman?
/// <code>r.table('marvel').get('ironman')('opponents').contains('superman').run(conn, callback)
/// </code></example>
        public Contains (Arguments args) : this(args, null) {
        }
/// <summary>
/// Returns whether or not a sequence contains all the specified values, or if functions are
/// provided instead, returns whether or not a sequence contains values matching all the
/// specified functions.
/// </summary>
/// <example><strong>Example:</strong> Has Iron Man ever fought Superman?
/// <code>r.table('marvel').get('ironman')('opponents').contains('superman').run(conn, callback)
/// </code></example>
        public Contains (Arguments args, OptArgs optargs)
             : this(TermType.CONTAINS, args, optargs) {
        }

    protected Contains (TermType termType, Arguments args, OptArgs optargs) : base(termType, args, optargs)
    {
    }


    



    

    


    
    }
}
