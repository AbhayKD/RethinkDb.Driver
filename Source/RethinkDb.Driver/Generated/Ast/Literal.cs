












//AUTOGENERATED, DO NOTMODIFY.
//Do not edit this file directly.

#pragma warning disable 1591 // Missing XML comment for publicly visible type or member
// ReSharper disable CheckNamespace

using System;
using RethinkDb.Driver.Ast;
using RethinkDb.Driver.Model;
using RethinkDb.Driver.Proto;
using System.Collections;
using System.Collections.Generic;


namespace RethinkDb.Driver.Ast {

    public partial class Literal : ReqlExpr {

    
    
    
/// <summary>
/// <para>Replace an object in a field instead of merging it with an existing object in a <code>merge</code> or <code>update</code> operation.</para>
/// <para><code>js
/// r.table('users').get(1).update({ data: r.literal({ age: 19, job: 'Engineer' }) }).run(conn, callback)</code></para>
/// </summary>
/// <example></example>
        public Literal (object arg) : this(new Arguments(arg), null) {
        }
/// <summary>
/// <para>Replace an object in a field instead of merging it with an existing object in a <code>merge</code> or <code>update</code> operation.</para>
/// <para><code>js
/// r.table('users').get(1).update({ data: r.literal({ age: 19, job: 'Engineer' }) }).run(conn, callback)</code></para>
/// </summary>
/// <example></example>
        public Literal (Arguments args) : this(args, null) {
        }
/// <summary>
/// <para>Replace an object in a field instead of merging it with an existing object in a <code>merge</code> or <code>update</code> operation.</para>
/// <para><code>js
/// r.table('users').get(1).update({ data: r.literal({ age: 19, job: 'Engineer' }) }).run(conn, callback)</code></para>
/// </summary>
/// <example></example>
        public Literal (Arguments args, OptArgs optargs)
         : base(TermType.LITERAL, args, optargs) {
        }


    



    


    

    


    
    }
}
