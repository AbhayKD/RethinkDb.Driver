










//AUTOGENERATED, DO NOTMODIFY.
//Do not edit this file directly.

#pragma warning disable 1591
// ReSharper disable CheckNamespace

using System;
using RethinkDb.Driver.Ast;
using RethinkDb.Driver.Model;
using RethinkDb.Driver.Proto;
using System.Collections.Generic;


namespace RethinkDb.Driver.Ast {

    public class Wait : ReqlExpr {

    
    
    
/// <summary>
/// Wait for a table or all the tables in a database to be ready. A table may be temporarily unavailable after creation, rebalancing or reconfiguring. The <code>wait</code> command blocks until the given table (or database) is fully up to date.
/// </summary>
/// <example><strong>Example:</strong> Wait for a table to be ready.
/// <code>&gt; r.table('superheroes').wait().run(conn, callback);
/// </code></example>
        public Wait (object arg) : this(new Arguments(arg), null) {
        }
/// <summary>
/// Wait for a table or all the tables in a database to be ready. A table may be temporarily unavailable after creation, rebalancing or reconfiguring. The <code>wait</code> command blocks until the given table (or database) is fully up to date.
/// </summary>
/// <example><strong>Example:</strong> Wait for a table to be ready.
/// <code>&gt; r.table('superheroes').wait().run(conn, callback);
/// </code></example>
        public Wait (Arguments args) : this(args, null) {
        }
/// <summary>
/// Wait for a table or all the tables in a database to be ready. A table may be temporarily unavailable after creation, rebalancing or reconfiguring. The <code>wait</code> command blocks until the given table (or database) is fully up to date.
/// </summary>
/// <example><strong>Example:</strong> Wait for a table to be ready.
/// <code>&gt; r.table('superheroes').wait().run(conn, callback);
/// </code></example>
        public Wait (Arguments args, OptArgs optargs)
             : this(TermType.WAIT, args, optargs) {
        }

    protected Wait (TermType termType, Arguments args, OptArgs optargs) : base(termType, args, optargs)
    {
    }


    



    

    


    
    }
}
