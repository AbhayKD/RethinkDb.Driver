










//AUTOGENERATED, DO NOTMODIFY.
//Do not edit this file directly.

#pragma warning disable 1591
// ReSharper disable CheckNamespace

using System;
using RethinkDb.Driver.Ast;
using RethinkDb.Driver.Model;
using RethinkDb.Driver.Proto;
using System.Collections.Generic;


namespace RethinkDb.Driver.Ast {

    public class InsertAt : ReqlExpr {

    
    
    
/// <summary>
/// Insert a value in to an array at a given index. Returns the modified array.
/// </summary>
/// <example><strong>Example:</strong> Hulk decides to join the avengers.
/// <code>r.expr(["Iron Man", "Spider-Man"]).insertAt(1, "Hulk").run(conn, callback)
/// </code></example>
        public InsertAt (object arg) : this(new Arguments(arg), null) {
        }
/// <summary>
/// Insert a value in to an array at a given index. Returns the modified array.
/// </summary>
/// <example><strong>Example:</strong> Hulk decides to join the avengers.
/// <code>r.expr(["Iron Man", "Spider-Man"]).insertAt(1, "Hulk").run(conn, callback)
/// </code></example>
        public InsertAt (Arguments args) : this(args, null) {
        }
/// <summary>
/// Insert a value in to an array at a given index. Returns the modified array.
/// </summary>
/// <example><strong>Example:</strong> Hulk decides to join the avengers.
/// <code>r.expr(["Iron Man", "Spider-Man"]).insertAt(1, "Hulk").run(conn, callback)
/// </code></example>
        public InsertAt (Arguments args, OptArgs optargs)
             : this(TermType.INSERT_AT, args, optargs) {
        }

    protected InsertAt (TermType termType, Arguments args, OptArgs optargs) : base(termType, args, optargs)
    {
    }


    



    

    


    
    }
}
