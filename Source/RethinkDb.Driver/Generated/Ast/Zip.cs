












//AUTOGENERATED, DO NOTMODIFY.
//Do not edit this file directly.

#pragma warning disable 1591
// ReSharper disable CheckNamespace

using System;
using RethinkDb.Driver.Ast;
using RethinkDb.Driver.Model;
using RethinkDb.Driver.Proto;
using System.Collections;
using System.Collections.Generic;


namespace RethinkDb.Driver.Ast {

    public class Zip : ReqlExpr {

    
    
    
/// <summary>
/// <para>Used to 'zip' up the result of a join by merging the 'right' fields into 'left' fields of each member of the sequence.</para>
/// </summary>
/// <example><para>Example: 'zips up' the sequence by merging the left and right fields produced by a join.</para>
/// <code>r.table('marvel').eqJoin('main_dc_collaborator', r.table('dc'))
///     .zip().run(conn, callback)
/// </code></example>
        public Zip (object arg) : this(new Arguments(arg), null) {
        }
/// <summary>
/// <para>Used to 'zip' up the result of a join by merging the 'right' fields into 'left' fields of each member of the sequence.</para>
/// </summary>
/// <example><para>Example: 'zips up' the sequence by merging the left and right fields produced by a join.</para>
/// <code>r.table('marvel').eqJoin('main_dc_collaborator', r.table('dc'))
///     .zip().run(conn, callback)
/// </code></example>
        public Zip (Arguments args) : this(args, null) {
        }
/// <summary>
/// <para>Used to 'zip' up the result of a join by merging the 'right' fields into 'left' fields of each member of the sequence.</para>
/// </summary>
/// <example><para>Example: 'zips up' the sequence by merging the left and right fields produced by a join.</para>
/// <code>r.table('marvel').eqJoin('main_dc_collaborator', r.table('dc'))
///     .zip().run(conn, callback)
/// </code></example>
        public Zip (Arguments args, OptArgs optargs)
         : base(TermType.ZIP, args, optargs) {
        }


    



    


    

    


    
    }
}
