#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Templates
{
    using System;
    
    #line 1 "..\..\AstSubclass.cshtml"
    using System.Collections.Generic;
    
    #line default
    #line hidden
    
    #line 2 "..\..\AstSubclass.cshtml"
    using System.Linq;
    
    #line default
    #line hidden
    using System.Text;
    
    #line 3 "..\..\AstSubclass.cshtml"
    using Humanizer;
    
    #line default
    #line hidden
    
    #line 4 "..\..\AstSubclass.cshtml"
    using Newtonsoft.Json.Linq;
    
    #line default
    #line hidden
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    public partial class AstSubclass : Templates.BaseTemplate
    {
#line hidden

        #line 8 "..\..\AstSubclass.cshtml"

    public string ClassName { get; set; }
    public string Superclass { get; set; }
    public string IncludeIn { get; set; }

    public IEnumerable<KeyValuePair<string, JObject>> SpeicalMethods
    {
        get
        {
            return Meta.Where(kvp => kvp.Value["include_in"]?.Values<string>().Contains(this.IncludeIn) ?? false);
        }
    }

    public string TermType { get; set; }
    public Dictionary<string,JObject> Meta { get; set; }


        #line default
        #line hidden

        public override void Execute()
        {




WriteLiteral("\r\n");


WriteLiteral("\r\n");


WriteLiteral("\r\n\r\n//AUTOGENERATED, DO NOTMODIFY.\r\n//Do not edit this file directly.\r\n\r\nusing Re" +
"thinkDb.Driver.Ast;\r\nusing RethinkDb.Driver.Model;\r\nusing RethinkDb.Driver.Proto" +
";\r\n\r\nnamespace RethinkDb.Driver.Ast.Gen {\r\n    public class ");


            
            #line 34 "..\..\AstSubclass.cshtml"
            Write(Class(ClassName));

            
            #line default
            #line hidden
WriteLiteral(" : ");


            
            #line 34 "..\..\AstSubclass.cshtml"
                                Write(Superclass);

            
            #line default
            #line hidden
WriteLiteral(" {\r\n    \r\n");


            
            #line 36 "..\..\AstSubclass.cshtml"
     if( this.TermType != null )
    {

            
            #line default
            #line hidden
WriteLiteral("        ");

WriteLiteral("public ");


            
            #line 38 "..\..\AstSubclass.cshtml"
            Write(Class(ClassName));

            
            #line default
            #line hidden
WriteLiteral(" (object arg) : this(new Arguments(arg), null) {\r\n");



WriteLiteral("        ");

WriteLiteral("}\r\n");



WriteLiteral("        ");

WriteLiteral("public ");


            
            #line 40 "..\..\AstSubclass.cshtml"
            Write(Class(ClassName));

            
            #line default
            #line hidden
WriteLiteral(" (Arguments args, OptArgs optargs) : this(null, args, optargs) {\r\n");



WriteLiteral("        ");

WriteLiteral("}\r\n");



WriteLiteral("        ");

WriteLiteral("public ");


            
            #line 42 "..\..\AstSubclass.cshtml"
            Write(Class(ClassName));

            
            #line default
            #line hidden
WriteLiteral(" (ReqlAst prev, Arguments args, OptArgs optargs)\r\n");



WriteLiteral("        ");

WriteLiteral("     : this(prev, TermType.");


            
            #line 43 "..\..\AstSubclass.cshtml"
                                Write(TermType);

            
            #line default
            #line hidden
WriteLiteral(", args, optargs) {\r\n");



WriteLiteral("        ");

WriteLiteral("}\r\n");


            
            #line 45 "..\..\AstSubclass.cshtml"
    }

            
            #line default
            #line hidden
WriteLiteral("\r\n        protected ");


            
            #line 47 "..\..\AstSubclass.cshtml"
             Write(Class(ClassName));

            
            #line default
            #line hidden
WriteLiteral(" (ReqlAst previous, TermType termType, Arguments args, OptArgs optargs) : base(pr" +
"evious, termType, args, optargs)\r\n        {\r\n        }\r\n\r\n    /* Static Factorie" +
"s */\r\n");


            
            #line 52 "..\..\AstSubclass.cshtml"
     if( this.TermType != null )
    {

            
            #line default
            #line hidden
WriteLiteral("        ");

WriteLiteral("public static ");


            
            #line 54 "..\..\AstSubclass.cshtml"
                   Write(Class(ClassName));

            
            #line default
            #line hidden
WriteLiteral(" FromArgs(params object[] args){\r\n");



WriteLiteral("              ");

WriteLiteral(" return new ");


            
            #line 55 "..\..\AstSubclass.cshtml"
                       Write(Class(ClassName));

            
            #line default
            #line hidden
WriteLiteral(" (new Arguments(args), null);\r\n");



WriteLiteral("        ");

WriteLiteral("}\r\n");


            
            #line 57 "..\..\AstSubclass.cshtml"
    }

            
            #line default
            #line hidden
WriteLiteral("\r\n    /* Special Methods */\r\n");


            
            #line 60 "..\..\AstSubclass.cshtml"
         foreach( var m in this.SpeicalMethods )
        {

            
            #line default
            #line hidden
WriteLiteral("            ");

WriteLiteral("public ");


            
            #line 62 "..\..\AstSubclass.cshtml"
                Write(Class(m.Key.ToLower()));

            
            #line default
            #line hidden
WriteLiteral(" ");


            
            #line 62 "..\..\AstSubclass.cshtml"
                                         Write(Method(m.Value["sharp_alias"]?.ToString() ?? m.Key.ToLower()));

            
            #line default
            #line hidden
WriteLiteral(" (params object[] fields){\r\n");


            
            #line 63 "..\..\AstSubclass.cshtml"
                if( IncludeIn == "top" )
                {

            
            #line default
            #line hidden
WriteLiteral("                    ");

WriteLiteral("return new ");


            
            #line 65 "..\..\AstSubclass.cshtml"
                            Write(Class(m.Key.ToLower()));

            
            #line default
            #line hidden
WriteLiteral(" (null, new Arguments(fields), new OptArgs());\r\n");


            
            #line 66 "..\..\AstSubclass.cshtml"
                }
                else
                {

            
            #line default
            #line hidden
WriteLiteral("                    ");

WriteLiteral("return new ");


            
            #line 69 "..\..\AstSubclass.cshtml"
                            Write(Class(m.Key.ToLower()));

            
            #line default
            #line hidden
WriteLiteral(" (this, new Arguments(fields), new OptArgs());\r\n");


            
            #line 70 "..\..\AstSubclass.cshtml"
                }

            
            #line default
            #line hidden
WriteLiteral("            ");

WriteLiteral("}\r\n");


            
            #line 72 "..\..\AstSubclass.cshtml"
        }

            
            #line default
            #line hidden
WriteLiteral("\r\n    }\r\n}\r\n");


        }
    }
}
#pragma warning restore 1591
