ModuleName: DatumBinary
DefsAndTests:
- TestType: JavaDef
  TestFile: datum/binary.yaml
  TestNum: 1
  Original: s = b''
  Java: byte[] s = (byte[]) "".getBytes(StandardCharsets.UTF_8);
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 2
  Original: r.binary(s)
  Java: r.binary(s)
  ExpectedOriginal: s
  ExpectedType: byte[]
  ExpectedJava: s
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 3
  Original: r.binary(s).count()
  Java: r.binary(s).count()
  ExpectedOriginal: 0
  ExpectedType: Double
  ExpectedJava: 0.0
  RunOpts: []
- TestType: JavaDef
  TestFile: datum/binary.yaml
  TestNum: 4
  Original: s = b'\x00'
  Java: byte[] s = (byte[]) "\x00".getBytes(StandardCharsets.UTF_8);
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 5
  Original: r.binary(s)
  Java: r.binary(s)
  ExpectedOriginal: s
  ExpectedType: byte[]
  ExpectedJava: s
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 6
  Original: r.binary(s).count()
  Java: r.binary(s).count()
  ExpectedOriginal: 1
  ExpectedType: Double
  ExpectedJava: 1.0
  RunOpts: []
- TestType: JavaDef
  TestFile: datum/binary.yaml
  TestNum: 7
  Original: s = b'\x00\x42'
  Java: byte[] s = (byte[]) "\x00\x42".getBytes(StandardCharsets.UTF_8);
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 8
  Original: r.binary(s)
  Java: r.binary(s)
  ExpectedOriginal: s
  ExpectedType: byte[]
  ExpectedJava: s
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 9
  Original: r.binary(s).count()
  Java: r.binary(s).count()
  ExpectedOriginal: 2
  ExpectedType: Double
  ExpectedJava: 2.0
  RunOpts: []
- TestType: JavaDef
  TestFile: datum/binary.yaml
  TestNum: 10
  Original: s = b'\x00\xfe\x7a'
  Java: byte[] s = (byte[]) "\x00\xfez".getBytes(StandardCharsets.UTF_8);
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 11
  Original: r.binary(s)
  Java: r.binary(s)
  ExpectedOriginal: s
  ExpectedType: byte[]
  ExpectedJava: s
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 12
  Original: r.binary(s).count()
  Java: r.binary(s).count()
  ExpectedOriginal: 3
  ExpectedType: Double
  ExpectedJava: 3.0
  RunOpts: []
- TestType: JavaDef
  TestFile: datum/binary.yaml
  TestNum: 13
  Original: s = b'\xed\xfe\x00\xba'
  Java: byte[] s = (byte[]) "\xed\xfe\x00\xba".getBytes(StandardCharsets.UTF_8);
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 14
  Original: r.binary(s)
  Java: r.binary(s)
  ExpectedOriginal: s
  ExpectedType: byte[]
  ExpectedJava: s
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 15
  Original: r.binary(s).count()
  Java: r.binary(s).count()
  ExpectedOriginal: 4
  ExpectedType: Double
  ExpectedJava: 4.0
  RunOpts: []
- TestType: JavaDef
  TestFile: datum/binary.yaml
  TestNum: 16
  Original: s = b'\x50\xf9\x00\x77\xf9'
  Java: byte[] s = (byte[]) "P\xf9\x00w\xf9".getBytes(StandardCharsets.UTF_8);
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 17
  Original: r.binary(s)
  Java: r.binary(s)
  ExpectedOriginal: s
  ExpectedType: byte[]
  ExpectedJava: s
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 18
  Original: r.binary(s).count()
  Java: r.binary(s).count()
  ExpectedOriginal: 5
  ExpectedType: Double
  ExpectedJava: 5.0
  RunOpts: []
- TestType: JavaDef
  TestFile: datum/binary.yaml
  TestNum: 19
  Original: s = b'\x2f\xe3\xb5\x57\x00\x92'
  Java: byte[] s = (byte[]) "/\xe3\xb5W\x00\x92".getBytes(StandardCharsets.UTF_8);
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 20
  Original: r.binary(s)
  Java: r.binary(s)
  ExpectedOriginal: s
  ExpectedType: byte[]
  ExpectedJava: s
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 21
  Original: r.binary(s).count()
  Java: r.binary(s).count()
  ExpectedOriginal: 6
  ExpectedType: Double
  ExpectedJava: 6.0
  RunOpts: []
- TestType: JavaDef
  TestFile: datum/binary.yaml
  TestNum: 22
  Original: s = b'\xa9\x43\x54\xe9\x00\xf8\xfb'
  Java: byte[] s = (byte[]) "\xa9\x43T\xe9\x00\xf8\xfb".getBytes(StandardCharsets.UTF_8);
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 23
  Original: r.binary(s)
  Java: r.binary(s)
  ExpectedOriginal: s
  ExpectedType: byte[]
  ExpectedJava: s
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 24
  Original: r.binary(s).count()
  Java: r.binary(s).count()
  ExpectedOriginal: 7
  ExpectedType: Double
  ExpectedJava: 7.0
  RunOpts: []
- TestType: JavaDef
  TestFile: datum/binary.yaml
  TestNum: 25
  Original: s = b'\x57\xbb\xe5\x82\x8b\xd3\x00\xf9'
  Java: byte[] s = (byte[]) "W\xbb\xe5\x82\x8b\xd3\x00\xf9".getBytes(StandardCharsets.UTF_8);
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 26
  Original: r.binary(s)
  Java: r.binary(s)
  ExpectedOriginal: s
  ExpectedType: byte[]
  ExpectedJava: s
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 27
  Original: r.binary(s).count()
  Java: r.binary(s).count()
  ExpectedOriginal: 8
  ExpectedType: Double
  ExpectedJava: 8.0
  RunOpts: []
- TestType: JavaDef
  TestFile: datum/binary.yaml
  TestNum: 28
  Original: s = b'\x44\x1b\x3e\x00\x13\x19\x29\x2a\xbf'
  Java: byte[] s = (byte[]) "D\x1b>\x00\x13\x19)*\xbf".getBytes(StandardCharsets.UTF_8);
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 29
  Original: r.binary(s)
  Java: r.binary(s)
  ExpectedOriginal: s
  ExpectedType: byte[]
  ExpectedJava: s
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 30
  Original: r.binary(s).count()
  Java: r.binary(s).count()
  ExpectedOriginal: 9
  ExpectedType: Double
  ExpectedJava: 9.0
  RunOpts: []
- TestType: JavaDef
  TestFile: datum/binary.yaml
  TestNum: 31
  Original: s = b'\x8a\x1d\x09\x00\x5d\x60\x6b\x2e\x70\xd9'
  Java: byte[] s = (byte[]) "\x8a\x1d\x09\x00]`k.p\xd9".getBytes(StandardCharsets.UTF_8);
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 32
  Original: r.binary(s)
  Java: r.binary(s)
  ExpectedOriginal: s
  ExpectedType: byte[]
  ExpectedJava: s
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 33
  Original: r.binary(s).count()
  Java: r.binary(s).count()
  ExpectedOriginal: 10
  ExpectedType: Double
  ExpectedJava: 10.0
  RunOpts: []
- TestType: JavaDef
  TestFile: datum/binary.yaml
  TestNum: 34
  Original: s = b'\x00\xaf\x47\x4b\x38\x99\x14\x8d\x8f\x10\x51'
  Java: byte[] s = (byte[]) "\x00\xafGK8\x99\x14\x8d\x8f\x10Q".getBytes(StandardCharsets.UTF_8);
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 35
  Original: r.binary(s)
  Java: r.binary(s)
  ExpectedOriginal: s
  ExpectedType: byte[]
  ExpectedJava: s
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 36
  Original: r.binary(s).count()
  Java: r.binary(s).count()
  ExpectedOriginal: 11
  ExpectedType: Double
  ExpectedJava: 11.0
  RunOpts: []
- TestType: JavaDef
  TestFile: datum/binary.yaml
  TestNum: 37
  Original: s = b'\x45\x39\x00\xf7\xc2\x37\xfd\xe0\x38\x82\x40\xa9'
  Java: byte[] s = (byte[]) "E9\x00\xf7\xc2\x37\xfd\xe0\x38\x82@\xa9".getBytes(StandardCharsets.UTF_8);
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 38
  Original: r.binary(s)
  Java: r.binary(s)
  ExpectedOriginal: s
  ExpectedType: byte[]
  ExpectedJava: s
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 39
  Original: r.binary(s).count()
  Java: r.binary(s).count()
  ExpectedOriginal: 12
  ExpectedType: Double
  ExpectedJava: 12.0
  RunOpts: []
- TestType: JavaDef
  TestFile: datum/binary.yaml
  TestNum: 40
  Original: a = b'\x00'
  Java: byte[] a = (byte[]) "\x00".getBytes(StandardCharsets.UTF_8);
  RunOpts: []
- TestType: JavaDef
  TestFile: datum/binary.yaml
  TestNum: 41
  Original: b = b'\x00\x01'
  Java: byte[] b = (byte[]) "\x00\x01".getBytes(StandardCharsets.UTF_8);
  RunOpts: []
- TestType: JavaDef
  TestFile: datum/binary.yaml
  TestNum: 42
  Original: c = b'\x01'
  Java: byte[] c = (byte[]) "\x01".getBytes(StandardCharsets.UTF_8);
  RunOpts: []
- TestType: JavaDef
  TestFile: datum/binary.yaml
  TestNum: 43
  Original: d = b'\x70\x22'
  Java: byte[] d = (byte[]) "p\"".getBytes(StandardCharsets.UTF_8);
  RunOpts: []
- TestType: JavaDef
  TestFile: datum/binary.yaml
  TestNum: 44
  Original: e = b'\x80'
  Java: byte[] e = (byte[]) "\x80".getBytes(StandardCharsets.UTF_8);
  RunOpts: []
- TestType: JavaDef
  TestFile: datum/binary.yaml
  TestNum: 45
  Original: f = b'\xFE'
  Java: byte[] f = (byte[]) "\xfe".getBytes(StandardCharsets.UTF_8);
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 46
  Original: r.binary(a).eq(r.binary(a))
  Java: r.binary(a).eq(r.binary(a))
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 47
  Original: r.binary(a).le(r.binary(a))
  Java: r.binary(a).le(r.binary(a))
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 48
  Original: r.binary(a).ge(r.binary(a))
  Java: r.binary(a).ge(r.binary(a))
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 49
  Original: r.binary(a).ne(r.binary(a))
  Java: r.binary(a).ne(r.binary(a))
  ExpectedOriginal: False
  ExpectedType: Boolean
  ExpectedJava: false
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 50
  Original: r.binary(a).lt(r.binary(a))
  Java: r.binary(a).lt(r.binary(a))
  ExpectedOriginal: False
  ExpectedType: Boolean
  ExpectedJava: false
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 51
  Original: r.binary(a).gt(r.binary(a))
  Java: r.binary(a).gt(r.binary(a))
  ExpectedOriginal: False
  ExpectedType: Boolean
  ExpectedJava: false
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 52
  Original: r.binary(a).ne(r.binary(b))
  Java: r.binary(a).ne(r.binary(b))
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 53
  Original: r.binary(a).lt(r.binary(b))
  Java: r.binary(a).lt(r.binary(b))
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 54
  Original: r.binary(a).le(r.binary(b))
  Java: r.binary(a).le(r.binary(b))
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 55
  Original: r.binary(a).ge(r.binary(b))
  Java: r.binary(a).ge(r.binary(b))
  ExpectedOriginal: False
  ExpectedType: Boolean
  ExpectedJava: false
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 56
  Original: r.binary(a).gt(r.binary(b))
  Java: r.binary(a).gt(r.binary(b))
  ExpectedOriginal: False
  ExpectedType: Boolean
  ExpectedJava: false
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 57
  Original: r.binary(a).eq(r.binary(b))
  Java: r.binary(a).eq(r.binary(b))
  ExpectedOriginal: False
  ExpectedType: Boolean
  ExpectedJava: false
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 58
  Original: r.binary(b).ne(r.binary(c))
  Java: r.binary(b).ne(r.binary(c))
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 59
  Original: r.binary(b).lt(r.binary(c))
  Java: r.binary(b).lt(r.binary(c))
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 60
  Original: r.binary(b).le(r.binary(c))
  Java: r.binary(b).le(r.binary(c))
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 61
  Original: r.binary(b).ge(r.binary(c))
  Java: r.binary(b).ge(r.binary(c))
  ExpectedOriginal: False
  ExpectedType: Boolean
  ExpectedJava: false
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 62
  Original: r.binary(b).gt(r.binary(c))
  Java: r.binary(b).gt(r.binary(c))
  ExpectedOriginal: False
  ExpectedType: Boolean
  ExpectedJava: false
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 63
  Original: r.binary(b).eq(r.binary(c))
  Java: r.binary(b).eq(r.binary(c))
  ExpectedOriginal: False
  ExpectedType: Boolean
  ExpectedJava: false
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 64
  Original: r.binary(c).ne(r.binary(d))
  Java: r.binary(c).ne(r.binary(d))
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 65
  Original: r.binary(c).lt(r.binary(d))
  Java: r.binary(c).lt(r.binary(d))
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 66
  Original: r.binary(c).le(r.binary(d))
  Java: r.binary(c).le(r.binary(d))
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 67
  Original: r.binary(c).ge(r.binary(d))
  Java: r.binary(c).ge(r.binary(d))
  ExpectedOriginal: False
  ExpectedType: Boolean
  ExpectedJava: false
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 68
  Original: r.binary(c).gt(r.binary(d))
  Java: r.binary(c).gt(r.binary(d))
  ExpectedOriginal: False
  ExpectedType: Boolean
  ExpectedJava: false
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 69
  Original: r.binary(c).eq(r.binary(d))
  Java: r.binary(c).eq(r.binary(d))
  ExpectedOriginal: False
  ExpectedType: Boolean
  ExpectedJava: false
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 70
  Original: r.binary(d).ne(r.binary(e))
  Java: r.binary(d).ne(r.binary(e))
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 71
  Original: r.binary(d).lt(r.binary(e))
  Java: r.binary(d).lt(r.binary(e))
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 72
  Original: r.binary(d).le(r.binary(e))
  Java: r.binary(d).le(r.binary(e))
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 73
  Original: r.binary(d).ge(r.binary(e))
  Java: r.binary(d).ge(r.binary(e))
  ExpectedOriginal: False
  ExpectedType: Boolean
  ExpectedJava: false
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 74
  Original: r.binary(d).gt(r.binary(e))
  Java: r.binary(d).gt(r.binary(e))
  ExpectedOriginal: False
  ExpectedType: Boolean
  ExpectedJava: false
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 75
  Original: r.binary(d).eq(r.binary(e))
  Java: r.binary(d).eq(r.binary(e))
  ExpectedOriginal: False
  ExpectedType: Boolean
  ExpectedJava: false
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 76
  Original: r.binary(e).ne(r.binary(f))
  Java: r.binary(e).ne(r.binary(f))
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 77
  Original: r.binary(e).lt(r.binary(f))
  Java: r.binary(e).lt(r.binary(f))
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 78
  Original: r.binary(e).le(r.binary(f))
  Java: r.binary(e).le(r.binary(f))
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 79
  Original: r.binary(e).ge(r.binary(f))
  Java: r.binary(e).ge(r.binary(f))
  ExpectedOriginal: False
  ExpectedType: Boolean
  ExpectedJava: false
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 80
  Original: r.binary(e).gt(r.binary(f))
  Java: r.binary(e).gt(r.binary(f))
  ExpectedOriginal: False
  ExpectedType: Boolean
  ExpectedJava: false
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 81
  Original: r.binary(e).eq(r.binary(f))
  Java: r.binary(e).eq(r.binary(f))
  ExpectedOriginal: False
  ExpectedType: Boolean
  ExpectedJava: false
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 82
  Original: r.binary(f).eq(r.binary(f))
  Java: r.binary(f).eq(r.binary(f))
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 83
  Original: r.binary(f).le(r.binary(f))
  Java: r.binary(f).le(r.binary(f))
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 84
  Original: r.binary(f).ge(r.binary(f))
  Java: r.binary(f).ge(r.binary(f))
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 85
  Original: r.binary(f).ne(r.binary(f))
  Java: r.binary(f).ne(r.binary(f))
  ExpectedOriginal: False
  ExpectedType: Boolean
  ExpectedJava: false
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 86
  Original: r.binary(f).lt(r.binary(f))
  Java: r.binary(f).lt(r.binary(f))
  ExpectedOriginal: False
  ExpectedType: Boolean
  ExpectedJava: false
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 87
  Original: r.binary(f).gt(r.binary(f))
  Java: r.binary(f).gt(r.binary(f))
  ExpectedOriginal: False
  ExpectedType: Boolean
  ExpectedJava: false
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 88
  Original: "r.binary(u'イロハニホヘト チリヌルヲ ワカヨタレソ ツネナラム'.encode('utf-8'))"
  Java: "r.binary(\"イロハニホヘト チリヌルヲ ワカヨタレソ ツネナラム\".encode(\"utf-8\"))"
  ExpectedOriginal: "u'イロハニホヘト チリヌルヲ ワカヨタレソ ツネナラム'.encode('utf-8')"
  ExpectedType: byte[]
  ExpectedJava: "\"イロハニホヘト チリヌルヲ ワカヨタレソ ツネナラム\".encode(\"utf-8\")"
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 89
  Original: "r.binary(u'ƀƁƂƃƄƅƆƇƈƉƊƋƌƍƎƏ'.encode('utf-16'))"
  Java: "r.binary(\"ƀƁƂƃƄƅƆƇƈƉƊƋƌƍƎƏ\".encode(\"utf-16\"))"
  ExpectedOriginal: "u'ƀƁƂƃƄƅƆƇƈƉƊƋƌƍƎƏ'.encode('utf-16')"
  ExpectedType: byte[]
  ExpectedJava: "\"ƀƁƂƃƄƅƆƇƈƉƊƋƌƍƎƏ\".encode(\"utf-16\")"
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 90
  Original: r.binary(u'lorem ipsum'.encode('ascii'))
  Java: r.binary("lorem ipsum".encode("ascii"))
  ExpectedOriginal: u'lorem ipsum'.encode('ascii')
  ExpectedType: byte[]
  ExpectedJava: '"lorem ipsum".encode("ascii")'
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 91
  Original: r.binary(b'foo').coerce_to('string')
  Java: r.binary("foo".getBytes(StandardCharsets.UTF_8)).coerceTo("string")
  ExpectedOriginal: ('foo')
  ExpectedType: String
  ExpectedJava: '"foo"'
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 92
  Original: "r.binary(u'イロハニホヘト チリヌルヲ ワカヨタレソ ツネナラム'.encode('utf-8')).coerce_to('string')"
  Java: "r.binary(\"イロハニホヘト チリヌルヲ ワカヨタレソ ツネナラム\".encode(\"utf-8\")).coerceTo(\"string\")"
  ExpectedOriginal: "u'イロハニホヘト チリヌルヲ ワカヨタレソ ツネナラム'"
  ExpectedType: String
  ExpectedJava: "\"イロハニホヘト チリヌルヲ ワカヨタレソ ツネナラム\""
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 93
  Original: r.binary(u'lorem ipsum'.encode('ascii')).coerce_to('string')
  Java: r.binary("lorem ipsum".encode("ascii")).coerceTo("string")
  ExpectedOriginal: u'lorem ipsum'
  ExpectedType: String
  ExpectedJava: '"lorem ipsum"'
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 94
  Original: r.expr('foo').coerce_to('binary')
  Java: r.expr("foo").coerceTo("binary")
  ExpectedOriginal: b'foo'
  ExpectedType: byte[]
  ExpectedJava: '"foo".getBytes(StandardCharsets.UTF_8)'
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 95
  Original: r.binary(b'foo').coerce_to('binary')
  Java: r.binary("foo".getBytes(StandardCharsets.UTF_8)).coerceTo("binary")
  ExpectedOriginal: b'foo'
  ExpectedType: byte[]
  ExpectedJava: '"foo".getBytes(StandardCharsets.UTF_8)'
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 96
  Original: r.binary(b'abcdefg').slice(-3,-1)
  Java: r.binary("abcdefg".getBytes(StandardCharsets.UTF_8)).slice(-3.0, -1.0)
  ExpectedOriginal: b'ef'
  ExpectedType: byte[]
  ExpectedJava: '"ef".getBytes(StandardCharsets.UTF_8)'
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 97
  Original: r.binary(b'abcdefg').slice(0, 2)
  Java: r.binary("abcdefg".getBytes(StandardCharsets.UTF_8)).slice(0.0, 2.0)
  ExpectedOriginal: b'ab'
  ExpectedType: byte[]
  ExpectedJava: '"ab".getBytes(StandardCharsets.UTF_8)'
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 98
  Original: r.binary(b'abcdefg').slice(3, -1)
  Java: r.binary("abcdefg".getBytes(StandardCharsets.UTF_8)).slice(3.0, -1.0)
  ExpectedOriginal: b'def'
  ExpectedType: byte[]
  ExpectedJava: '"def".getBytes(StandardCharsets.UTF_8)'
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 99
  Original: r.binary(b'abcdefg').slice(-5, 5)
  Java: r.binary("abcdefg".getBytes(StandardCharsets.UTF_8)).slice(-5.0, 5.0)
  ExpectedOriginal: b'cde'
  ExpectedType: byte[]
  ExpectedJava: '"cde".getBytes(StandardCharsets.UTF_8)'
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 100
  Original: r.binary(b'abcdefg').slice(-8, 2)
  Java: r.binary("abcdefg".getBytes(StandardCharsets.UTF_8)).slice(-8.0, 2.0)
  ExpectedOriginal: b'ab'
  ExpectedType: byte[]
  ExpectedJava: '"ab".getBytes(StandardCharsets.UTF_8)'
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 101
  Original: r.binary(b'abcdefg').slice(5, 7)
  Java: r.binary("abcdefg".getBytes(StandardCharsets.UTF_8)).slice(5.0, 7.0)
  ExpectedOriginal: b'fg'
  ExpectedType: byte[]
  ExpectedJava: '"fg".getBytes(StandardCharsets.UTF_8)'
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 102
  Original: r.binary(b'abcdefg').slice(-9, 2)
  Java: r.binary("abcdefg".getBytes(StandardCharsets.UTF_8)).slice(-9.0, 2.0)
  ExpectedOriginal: b'ab'
  ExpectedType: byte[]
  ExpectedJava: '"ab".getBytes(StandardCharsets.UTF_8)'
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 103
  Original: r.binary(b'abcdefg').slice(5, 9)
  Java: r.binary("abcdefg".getBytes(StandardCharsets.UTF_8)).slice(5.0, 9.0)
  ExpectedOriginal: b'fg'
  ExpectedType: byte[]
  ExpectedJava: '"fg".getBytes(StandardCharsets.UTF_8)'
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 104
  Original: r.binary(b)
  Java: r.binary(b)
  ExpectedOriginal: b
  ExpectedType: byte[]
  ExpectedJava: b
  RunOpts:
  - Key: binary_format
    Val: native
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 105
  Original: r.binary(b)
  Java: r.binary(b)
  ExpectedOriginal: ({'$reql_type$':'BINARY','data':'AAE='})
  ExpectedType: Map
  ExpectedJava: r.hashMap("$reql_type$", "BINARY").with("data", "AAE=")
  RunOpts:
  - Key: binary_format
    Val: raw
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 106
  Original: r.binary(r.expr("data"))
  Java: r.binary(r.expr("data"))
  ExpectedOriginal: (b"data")
  ExpectedType: byte[]
  ExpectedJava: '"data".getBytes(StandardCharsets.UTF_8)'
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 107
  Original: r.binary(r.expr({}))
  Java: r.binary(r.expr(r.hashMap()))
  ExpectedOriginal: err('ReqlQueryLogicError', 'Expected type STRING but found OBJECT.', [])
  ExpectedType: Err
  ExpectedJava: err("ReqlQueryLogicError", "Expected type STRING but found OBJECT.", r.array())
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 108
  Original: r.binary(r.expr([]))
  Java: r.binary(r.expr(r.array()))
  ExpectedOriginal: err('ReqlQueryLogicError', 'Expected type STRING but found ARRAY.', [])
  ExpectedType: Err
  ExpectedJava: err("ReqlQueryLogicError", "Expected type STRING but found ARRAY.", r.array())
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 109
  Original: r.expr({'$reql_type$':'BINARY'})
  Java: r.expr(r.hashMap("$reql_type$", "BINARY"))
  ExpectedOriginal: err('ReqlQueryLogicError','Invalid binary pseudotype:'+' lacking `data` key.',[])
  ExpectedType: Err
  ExpectedJava: err("ReqlQueryLogicError", "Invalid binary pseudotype:" + " lacking `data` key.", r.array())
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 110
  Original: r.expr({'$reql_type$':'BINARY','data':'ABCDEFGH==AA'})
  Java: r.expr(r.hashMap("$reql_type$", "BINARY").with("data", "ABCDEFGH==AA"))
  ExpectedOriginal: err('ReqlQueryLogicError','Invalid base64 format, data found after padding character \'=\'.',[])
  ExpectedType: Err
  ExpectedJava: err("ReqlQueryLogicError", "Invalid base64 format, data found after padding character '='.", r.array())
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 111
  Original: r.expr({'$reql_type$':'BINARY','data':'ABCDEF==$'})
  Java: r.expr(r.hashMap("$reql_type$", "BINARY").with("data", "ABCDEF==$"))
  ExpectedOriginal: err('ReqlQueryLogicError','Invalid base64 format, data found after padding character \'=\'.',[])
  ExpectedType: Err
  ExpectedJava: err("ReqlQueryLogicError", "Invalid base64 format, data found after padding character '='.", r.array())
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 112
  Original: r.expr({'$reql_type$':'BINARY','data':'A^CDEFGH'})
  Java: r.expr(r.hashMap("$reql_type$", "BINARY").with("data", "A^CDEFGH"))
  ExpectedOriginal: err('ReqlQueryLogicError','Invalid base64 character found:'+' \'^\'.',[])
  ExpectedType: Err
  ExpectedJava: err("ReqlQueryLogicError", "Invalid base64 character found:" + " '^'.", r.array())
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 113
  Original: r.expr({'$reql_type$':'BINARY','data':'ABCDE'})
  Java: r.expr(r.hashMap("$reql_type$", "BINARY").with("data", "ABCDE"))
  ExpectedOriginal: err('ReqlQueryLogicError','Invalid base64 length:'+' 1 character remaining, cannot decode a full byte.',[])
  ExpectedType: Err
  ExpectedJava: err("ReqlQueryLogicError", "Invalid base64 length:" + " 1 character remaining, cannot decode a full byte.", r.array())
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 114
  Original: r.binary(a).coerce_to('array')
  Java: r.binary(a).coerceTo("array")
  ExpectedOriginal: err('ReqlQueryLogicError','Cannot coerce BINARY to ARRAY.',[])
  ExpectedType: Err
  ExpectedJava: err("ReqlQueryLogicError", "Cannot coerce BINARY to ARRAY.", r.array())
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 115
  Original: r.binary(a).coerce_to('object')
  Java: r.binary(a).coerceTo("object")
  ExpectedOriginal: err('ReqlQueryLogicError','Cannot coerce BINARY to OBJECT.',[])
  ExpectedType: Err
  ExpectedJava: err("ReqlQueryLogicError", "Cannot coerce BINARY to OBJECT.", r.array())
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 116
  Original: r.binary(a).coerce_to('bool')
  Java: r.binary(a).coerceTo("bool")
  ExpectedOriginal: err('ReqlQueryLogicError','Cannot coerce BINARY to BOOL.',[])
  ExpectedType: Err
  ExpectedJava: err("ReqlQueryLogicError", "Cannot coerce BINARY to BOOL.", r.array())
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 117
  Original: r.binary(a).coerce_to('number')
  Java: r.binary(a).coerceTo("number")
  ExpectedOriginal: err('ReqlQueryLogicError','Cannot coerce BINARY to NUMBER.',[])
  ExpectedType: Err
  ExpectedJava: err("ReqlQueryLogicError", "Cannot coerce BINARY to NUMBER.", r.array())
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/binary.yaml
  TestNum: 118
  Original: r.binary(a).coerce_to('nu'+'ll')
  Java: r.binary(a).coerceTo(r.add("nu", "ll"))
  ExpectedOriginal: err('ReqlQueryLogicError','Cannot coerce BINARY to NULL.',[])
  ExpectedType: Err
  ExpectedJava: err("ReqlQueryLogicError", "Cannot coerce BINARY to NULL.", r.array())
  RunOpts: []
