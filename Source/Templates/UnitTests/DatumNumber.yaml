ModuleName: DatumNumber
Description: Tests of conversion to and from the RQL number type
DefsAndTests:
- TestType: JavaQuery
  TestFile: datum/number.yaml
  LineNum: 6
  Original: r.expr(1)
  Java: r.expr(1L)
  ExpectedOriginal: 1
  ExpectedType: Long
  ExpectedJava: 1L
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/number.yaml
  LineNum: 15
  Original: r.expr(-1)
  Java: r.expr(-1L)
  ExpectedOriginal: -1
  ExpectedType: Long
  ExpectedJava: -1L
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/number.yaml
  LineNum: 24
  Original: r.expr(0)
  Java: r.expr(0L)
  ExpectedOriginal: 0
  ExpectedType: Long
  ExpectedJava: 0L
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/number.yaml
  LineNum: 35
  Original: r.expr(1.0)
  Java: r.expr(1.0)
  ExpectedOriginal: 1.0
  ExpectedType: Double
  ExpectedJava: 1.0
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/number.yaml
  LineNum: 44
  Original: r.expr(1.5)
  Java: r.expr(1.5)
  ExpectedOriginal: 1.5
  ExpectedType: Double
  ExpectedJava: 1.5
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/number.yaml
  LineNum: 53
  Original: r.expr(-0.5)
  Java: r.expr(-0.5)
  ExpectedOriginal: -0.5
  ExpectedType: Double
  ExpectedJava: -0.5
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/number.yaml
  LineNum: 62
  Original: r.expr(67498.89278)
  Java: r.expr(67498.89278)
  ExpectedOriginal: 67498.89278
  ExpectedType: Double
  ExpectedJava: 67498.89278
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/number.yaml
  LineNum: 73
  Original: r.expr(1234567890)
  Java: r.expr(1234567890L)
  ExpectedOriginal: 1234567890
  ExpectedType: Long
  ExpectedJava: 1234567890L
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/number.yaml
  LineNum: 83
  Original: r.expr(-73850380122423)
  Java: r.expr(-73850380122423L)
  ExpectedOriginal: -73850380122423
  ExpectedType: Long
  ExpectedJava: -73850380122423L
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/number.yaml
  LineNum: 95
  Original: r.expr(1234567890123456789012345678901234567890)
  Java: r.expr(1234567890123456789012345678901234567890.0)
  ExpectedOriginal: float(1234567890123456789012345678901234567890)
  ExpectedType: Double
  ExpectedJava: float_(1234567890123456789012345678901234567890.0)
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/number.yaml
  LineNum: 100
  Original: r.expr(123.4567890123456789012345678901234567890)
  Java: r.expr(123.45678901234568)
  ExpectedOriginal: 123.4567890123456789012345678901234567890
  ExpectedType: Double
  ExpectedJava: 123.45678901234568
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/number.yaml
  LineNum: 103
  Original: r.expr(1).type_of()
  Java: r.expr(1L).typeOf()
  ExpectedOriginal: 'NUMBER'
  ExpectedType: String
  ExpectedJava: '"NUMBER"'
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/number.yaml
  LineNum: 107
  Original: r.expr(1).coerce_to('string')
  Java: r.expr(1L).coerceTo("string")
  ExpectedOriginal: '1'
  ExpectedType: String
  ExpectedJava: '"1"'
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/number.yaml
  LineNum: 110
  Original: r.expr(1).coerce_to('number')
  Java: r.expr(1L).coerceTo("number")
  ExpectedOriginal: 1
  ExpectedType: Long
  ExpectedJava: 1L
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/number.yaml
  LineNum: 115
  Original: r.expr(1.0)
  Java: r.expr(1.0)
  ExpectedOriginal: int_cmp(1)
  ExpectedType: IntCmp
  ExpectedJava: int_cmp(1L)
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/number.yaml
  LineNum: 119
  Original: r.expr(45)
  Java: r.expr(45L)
  ExpectedOriginal: int_cmp(45)
  ExpectedType: IntCmp
  ExpectedJava: int_cmp(45L)
  RunOpts: []
- TestType: JavaQuery
  TestFile: datum/number.yaml
  LineNum: 123
  Original: r.expr(1.2)
  Java: r.expr(1.2)
  ExpectedOriginal: float_cmp(1.2)
  ExpectedType: FloatCmp
  ExpectedJava: float_cmp(1.2)
  RunOpts: []
