ModuleName: Regression4030
TableVarNames:
- tbl
DefsAndTests:
- TestType: JavaDef
  TestFile: regression/4030.yaml
  TestNum: 1
  Original: data = [{'id':1}, {'id':2}, {'id':3}, {'id':4}, {'id':5}, {'id':6}]
  Java: List data = (List) (r.array(r.hashMap("id", 1L), r.hashMap("id", 2L), r.hashMap("id", 3L), r.hashMap("id", 4L), r.hashMap("id", 5L), r.hashMap("id", 6L)));
  RunOpts: []
- TestType: JavaDef
  TestFile: regression/4030.yaml
  TestNum: 2
  Original: changes = [{'id':7}, {'id':8}, {'id':9}, {'id':10}]
  Java: List changes = (List) (r.array(r.hashMap("id", 7L), r.hashMap("id", 8L), r.hashMap("id", 9L), r.hashMap("id", 10L)));
  RunOpts: []
- TestType: JavaQuery
  TestFile: regression/4030.yaml
  TestNum: 3
  Original: tbl.insert(data)
  Java: tbl.insert(data)
  ExpectedOriginal: partial({'errors':0, 'inserted':6})
  ExpectedType: Partial
  ExpectedJava: partial(r.hashMap("errors", 0L).with("inserted", 6L))
  RunOpts: []
- TestType: JavaQuery
  TestFile: regression/4030.yaml
  TestNum: 4
  Original: tbl.count()
  Java: tbl.count()
  ExpectedOriginal: (6)
  ExpectedType: Long
  ExpectedJava: 6L
  RunOpts: []
- TestType: JavaQuery
  TestFile: regression/4030.yaml
  TestNum: 5
  Original: tbl.union(tbl)
  Java: tbl.union(tbl)
  ExpectedOriginal: bag(data * 2)
  ExpectedType: Bag
  ExpectedJava: bag((List)Stream.concat(data.stream(), data.stream()).collect(Collectors.toList()))
  RunOpts: []
- TestType: JavaQuery
  TestFile: regression/4030.yaml
  TestNum: 6
  Original: r.union(tbl, tbl)
  Java: r.union(tbl, tbl)
  ExpectedOriginal: bag(data * 2)
  ExpectedType: Bag
  ExpectedJava: bag((List)Stream.concat(data.stream(), data.stream()).collect(Collectors.toList()))
  RunOpts: []
