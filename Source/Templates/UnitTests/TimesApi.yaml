ModuleName: TimesApi
DefsAndTests:
- TestType: JavaDef
  TestFile: times/api.yaml
  TestNum: 1
  Original: rt1 = 1375147296.6812
  Java: Double rt1 = (Double) (1375147296.6812);
  RunOpts: []
- TestType: JavaDef
  TestFile: times/api.yaml
  TestNum: 2
  Original: t1 = r.epoch_time(rt1)
  Java: EpochTime t1 = (EpochTime) (r.epochTime(rt1));
  RunOpts: []
- TestType: JavaDef
  TestFile: times/api.yaml
  TestNum: 3
  Original: t2 = r.epoch_time(rt1 + 1000)
  Java: EpochTime t2 = (EpochTime) (r.epochTime(r.add(rt1, 1000)));
  RunOpts: []
- TestType: JavaQuery
  TestFile: times/api.yaml
  TestNum: 4
  Original: (t1 + 1000).to_epoch_time()
  Java: r.add(t1, 1000).toEpochTime()
  ExpectedOriginal: (1375148296.681)
  ExpectedType: Double
  ExpectedJava: 1375148296.681
  RunOpts: []
- TestType: JavaQuery
  TestFile: times/api.yaml
  TestNum: 5
  Original: (t1 - 1000).to_epoch_time()
  Java: r.sub(t1, 1000).toEpochTime()
  ExpectedOriginal: (1375146296.681)
  ExpectedType: Double
  ExpectedJava: 1375146296.681
  RunOpts: []
- TestType: JavaQuery
  TestFile: times/api.yaml
  TestNum: 6
  Original: (t1 - (t1 - 1000))
  Java: r.sub(t1, r.sub(t1, 1000))
  ExpectedOriginal: 1000
  ExpectedType: Long
  ExpectedJava: 1000
  RunOpts: []
- TestType: JavaQuery
  TestFile: times/api.yaml
  TestNum: 7
  Original: (t1 < t1)
  Java: r.lt(t1, t1)
  ExpectedOriginal: False
  ExpectedType: Boolean
  ExpectedJava: false
  RunOpts: []
- TestType: JavaQuery
  TestFile: times/api.yaml
  TestNum: 8
  Original: (t1 <= t1)
  Java: r.le(t1, t1)
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: times/api.yaml
  TestNum: 9
  Original: (t1 == t1)
  Java: r.eq(t1, t1)
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: times/api.yaml
  TestNum: 10
  Original: (t1 != t1)
  Java: r.ne(t1, t1)
  ExpectedOriginal: False
  ExpectedType: Boolean
  ExpectedJava: false
  RunOpts: []
- TestType: JavaQuery
  TestFile: times/api.yaml
  TestNum: 11
  Original: (t1 >= t1)
  Java: r.ge(t1, t1)
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: times/api.yaml
  TestNum: 12
  Original: (t1 > t1)
  Java: r.gt(t1, t1)
  ExpectedOriginal: False
  ExpectedType: Boolean
  ExpectedJava: false
  RunOpts: []
- TestType: JavaQuery
  TestFile: times/api.yaml
  TestNum: 13
  Original: (t1 < t2)
  Java: r.lt(t1, t2)
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: times/api.yaml
  TestNum: 14
  Original: (t1 <= t2)
  Java: r.le(t1, t2)
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: times/api.yaml
  TestNum: 15
  Original: (t1 == t2)
  Java: r.eq(t1, t2)
  ExpectedOriginal: False
  ExpectedType: Boolean
  ExpectedJava: false
  RunOpts: []
- TestType: JavaQuery
  TestFile: times/api.yaml
  TestNum: 16
  Original: (t1 != t2)
  Java: r.ne(t1, t2)
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: times/api.yaml
  TestNum: 17
  Original: (t1 >= t2)
  Java: r.ge(t1, t2)
  ExpectedOriginal: False
  ExpectedType: Boolean
  ExpectedJava: false
  RunOpts: []
- TestType: JavaQuery
  TestFile: times/api.yaml
  TestNum: 18
  Original: (t1 > t2)
  Java: r.gt(t1, t2)
  ExpectedOriginal: False
  ExpectedType: Boolean
  ExpectedJava: false
  RunOpts: []
- TestType: JavaQuery
  TestFile: times/api.yaml
  TestNum: 19
  Original: t1.during(t1, t1 + 1000)
  Java: t1.during(t1, r.add(t1, 1000))
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: times/api.yaml
  TestNum: 20
  Original: t1.during(t1, t1 + 1000, left_bound='open')
  Java: t1.during(t1, r.add(t1, 1000)).optArg("left_bound", "open")
  ExpectedOriginal: False
  ExpectedType: Boolean
  ExpectedJava: false
  RunOpts: []
- TestType: JavaQuery
  TestFile: times/api.yaml
  TestNum: 21
  Original: t1.during(t1, t1)
  Java: t1.during(t1, t1)
  ExpectedOriginal: False
  ExpectedType: Boolean
  ExpectedJava: false
  RunOpts: []
- TestType: JavaQuery
  TestFile: times/api.yaml
  TestNum: 22
  Original: t1.during(t1, t1, right_bound='closed')
  Java: t1.during(t1, t1).optArg("right_bound", "closed")
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: times/api.yaml
  TestNum: 23
  Original: t1.date().to_epoch_time()
  Java: t1.date().toEpochTime()
  ExpectedOriginal: 1375142400
  ExpectedType: Long
  ExpectedJava: 1375142400
  RunOpts: []
- TestType: JavaQuery
  TestFile: times/api.yaml
  TestNum: 24
  Original: t1.time_of_day()
  Java: t1.timeOfDay()
  ExpectedOriginal: (4896.681)
  ExpectedType: Double
  ExpectedJava: 4896.681
  RunOpts: []
- TestType: JavaQuery
  TestFile: times/api.yaml
  TestNum: 25
  Original: t1.year()
  Java: t1.year()
  ExpectedOriginal: 2013
  ExpectedType: Long
  ExpectedJava: 2013
  RunOpts: []
- TestType: JavaQuery
  TestFile: times/api.yaml
  TestNum: 26
  Original: t1.month()
  Java: t1.month()
  ExpectedOriginal: 7
  ExpectedType: Long
  ExpectedJava: 7
  RunOpts: []
- TestType: JavaQuery
  TestFile: times/api.yaml
  TestNum: 27
  Original: t1.day()
  Java: t1.day()
  ExpectedOriginal: 30
  ExpectedType: Long
  ExpectedJava: 30
  RunOpts: []
- TestType: JavaQuery
  TestFile: times/api.yaml
  TestNum: 28
  Original: t1.day_of_week()
  Java: t1.dayOfWeek()
  ExpectedOriginal: 2
  ExpectedType: Long
  ExpectedJava: 2
  RunOpts: []
- TestType: JavaQuery
  TestFile: times/api.yaml
  TestNum: 29
  Original: t1.day_of_year()
  Java: t1.dayOfYear()
  ExpectedOriginal: 211
  ExpectedType: Long
  ExpectedJava: 211
  RunOpts: []
- TestType: JavaQuery
  TestFile: times/api.yaml
  TestNum: 30
  Original: t1.hours()
  Java: t1.hours()
  ExpectedOriginal: 1
  ExpectedType: Long
  ExpectedJava: 1
  RunOpts: []
- TestType: JavaQuery
  TestFile: times/api.yaml
  TestNum: 31
  Original: t1.minutes()
  Java: t1.minutes()
  ExpectedOriginal: 21
  ExpectedType: Long
  ExpectedJava: 21
  RunOpts: []
- TestType: JavaQuery
  TestFile: times/api.yaml
  TestNum: 32
  Original: t1.seconds()
  Java: t1.seconds()
  ExpectedOriginal: 36.681
  ExpectedType: Double
  ExpectedJava: 36.681
  RunOpts: []
- TestType: JavaQuery
  TestFile: times/api.yaml
  TestNum: 33
  Original: r.time(2013, r.july, 29, 23, 30, 0.1, "-07:00").to_epoch_time()
  Java: r.time(2013, r.july(), 29, 23, 30, 0.1, "-07:00").toEpochTime()
  ExpectedOriginal: (1375165800.1)
  ExpectedType: Double
  ExpectedJava: 1375165800.1
  RunOpts: []
- TestType: JavaQuery
  TestFile: times/api.yaml
  TestNum: 34
  Original: r.time(2013, r.july, 29, 23, 30, 0.1, "-07:00").timezone()
  Java: r.time(2013, r.july(), 29, 23, 30, 0.1, "-07:00").timezone()
  ExpectedOriginal: ("-07:00")
  ExpectedType: String
  ExpectedJava: '"-07:00"'
  RunOpts: []
- TestType: JavaQuery
  TestFile: times/api.yaml
  TestNum: 38
  Original: r.time(2013, r.july, 29, 23).to_epoch_time()
  Java: r.time(2013, r.july(), 29, 23).toEpochTime()
  ExpectedOriginal: err("ReqlQueryLogicError", "Expected type STRING but found NUMBER.", [])
  ExpectedType: Err
  ExpectedJava: err("ReqlQueryLogicError", "Expected type STRING but found NUMBER.", r.array())
  RunOpts: []
- TestType: JavaQuery
  TestFile: times/api.yaml
  TestNum: 39
  Original: r.time(2013, r.july, 29, "-07:00").to_epoch_time()
  Java: r.time(2013, r.july(), 29, "-07:00").toEpochTime()
  ExpectedOriginal: 1375081200
  ExpectedType: Long
  ExpectedJava: 1375081200
  RunOpts: []
- TestType: JavaQuery
  TestFile: times/api.yaml
  TestNum: 40
  Original: r.time(2013, r.july, 29, "-07:00").timezone()
  Java: r.time(2013, r.july(), 29, "-07:00").timezone()
  ExpectedOriginal: ("-07:00")
  ExpectedType: String
  ExpectedJava: '"-07:00"'
  RunOpts: []
- TestType: JavaQuery
  TestFile: times/api.yaml
  TestNum: 43
  Original: r.iso8601("2013-07-30T20:56:05-07:00").to_epoch_time()
  Java: r.iso8601("2013-07-30T20:56:05-07:00").toEpochTime()
  ExpectedOriginal: 1375242965
  ExpectedType: Long
  ExpectedJava: 1375242965
  RunOpts: []
- TestType: JavaQuery
  TestFile: times/api.yaml
  TestNum: 44
  Original: r.epoch_time(1375242965).in_timezone("-07:00").to_iso8601()
  Java: r.epochTime(1375242965).inTimezone("-07:00").toIso8601()
  ExpectedOriginal: ("2013-07-30T20:56:05-07:00")
  ExpectedType: String
  ExpectedJava: '"2013-07-30T20:56:05-07:00"'
  RunOpts: []
- TestType: JavaQuery
  TestFile: times/api.yaml
  TestNum: 45
  Original: r.now().type_of()
  Java: r.now().typeOf()
  ExpectedOriginal: ("PTYPE<TIME>")
  ExpectedType: String
  ExpectedJava: '"PTYPE<TIME>"'
  RunOpts: []
- TestType: JavaQuery
  TestFile: times/api.yaml
  TestNum: 46
  Original: (r.now() - r.now())
  Java: r.now().sub(r.now())
  ExpectedOriginal: 0
  ExpectedType: Long
  ExpectedJava: 0
  RunOpts: []
- TestType: JavaQuery
  TestFile: times/api.yaml
  TestNum: 47
  Original: r.iso8601("2013-07-30T20:56:05").to_iso8601()
  Java: r.iso8601("2013-07-30T20:56:05").toIso8601()
  ExpectedOriginal: err("ReqlQueryLogicError", "ISO 8601 string has no time zone, and no default time zone was provided.", [])
  ExpectedType: Err
  ExpectedJava: err("ReqlQueryLogicError", "ISO 8601 string has no time zone, and no default time zone was provided.", r.array())
  RunOpts: []
- TestType: JavaQuery
  TestFile: times/api.yaml
  TestNum: 48
  Original: r.iso8601("2013-07-30T20:56:05", default_timezone='-07').to_iso8601()
  Java: r.iso8601("2013-07-30T20:56:05").optArg("default_timezone", "-07").toIso8601()
  ExpectedOriginal: ("2013-07-30T20:56:05-07:00")
  ExpectedType: String
  ExpectedJava: '"2013-07-30T20:56:05-07:00"'
  RunOpts: []
- TestType: JavaQuery
  TestFile: times/api.yaml
  TestNum: 49
  Original: r.expr([r.monday, r.tuesday, r.wednesday, r.thursday, r.friday, r.saturday, r.sunday])
  Java: r.expr(r.array(r.monday(), r.tuesday(), r.wednesday(), r.thursday(), r.friday(), r.saturday(), r.sunday()))
  ExpectedOriginal: ([1, 2, 3, 4, 5, 6, 7])
  ExpectedType: List
  ExpectedJava: r.array(1, 2, 3, 4, 5, 6, 7)
  RunOpts: []
- TestType: JavaQuery
  TestFile: times/api.yaml
  TestNum: 50
  Original: r.expr([r.january, r.february, r.march, r.april, r.may, r.june, r.july, r.august, r.september, r.october, r.november, r.december])
  Java: r.expr(r.array(r.january(), r.february(), r.march(), r.april(), r.may(), r.june(), r.july(), r.august(), r.september(), r.october(), r.november(), r.december()))
  ExpectedOriginal: ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12])
  ExpectedType: List
  ExpectedJava: r.array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12)
  RunOpts: []
