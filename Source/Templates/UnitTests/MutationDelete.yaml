ModuleName: MutationDelete
TableVarNames:
- tbl
DefsAndTests:
- TestType: JavaQuery
  TestFile: mutation/delete.yaml
  TestNum: 1
  Original: tbl.insert([{'id':i} for i in xrange(100)])
  Java: tbl.insert(IntStream.range(0, 100.0).boxed().map(i -> r.hashMap("id", i)).collect(Collectors.toList()))
  ExpectedOriginal: ({'deleted':0.0,'replaced':0.0,'unchanged':0.0,'errors':0.0,'skipped':0.0,'inserted':100})
  ExpectedType: Map
  ExpectedJava: r.hashMap("deleted", 0.0).with("replaced", 0.0).with("unchanged", 0.0).with("errors", 0.0).with("skipped", 0.0).with("inserted", 100.0)
  RunOpts: []
- TestType: JavaQuery
  TestFile: mutation/delete.yaml
  TestNum: 2
  Original: tbl.count()
  Java: tbl.count()
  ExpectedOriginal: 100
  ExpectedType: Double
  ExpectedJava: 100.0
  RunOpts: []
- TestType: JavaQuery
  TestFile: mutation/delete.yaml
  TestNum: 3
  Original: tbl.get(12).delete()
  Java: tbl.get(12.0).delete()
  ExpectedOriginal: ({'deleted':1,'replaced':0.0,'unchanged':0.0,'errors':0.0,'skipped':0.0,'inserted':0.0})
  ExpectedType: Map
  ExpectedJava: r.hashMap("deleted", 1.0).with("replaced", 0.0).with("unchanged", 0.0).with("errors", 0.0).with("skipped", 0.0).with("inserted", 0.0)
  RunOpts: []
- TestType: JavaQuery
  TestFile: mutation/delete.yaml
  TestNum: 4
  Original: tbl.skip(50).delete(durability='wrong')
  Java: tbl.skip(50.0).delete().optArg("durability", "wrong")
  ExpectedOriginal: err('ReqlQueryLogicError', 'Durability option `wrong` unrecognized (options are "hard" and "soft").', [0])
  ExpectedType: Err
  ExpectedJava: err("ReqlQueryLogicError", "Durability option `wrong` unrecognized (options are \"hard\" and \"soft\").", r.array(0.0))
  RunOpts: []
- TestType: JavaQuery
  TestFile: mutation/delete.yaml
  TestNum: 5
  Original: tbl.skip(50).delete(durability='soft')
  Java: tbl.skip(50.0).delete().optArg("durability", "soft")
  ExpectedOriginal: ({'deleted':49,'replaced':0.0,'unchanged':0.0,'errors':0.0,'skipped':0.0,'inserted':0.0})
  ExpectedType: Map
  ExpectedJava: r.hashMap("deleted", 49.0).with("replaced", 0.0).with("unchanged", 0.0).with("errors", 0.0).with("skipped", 0.0).with("inserted", 0.0)
  RunOpts: []
- TestType: JavaQuery
  TestFile: mutation/delete.yaml
  TestNum: 6
  Original: tbl.delete(durability='hard')
  Java: tbl.delete().optArg("durability", "hard")
  ExpectedOriginal: ({'deleted':50,'replaced':0.0,'unchanged':0.0,'errors':0.0,'skipped':0.0,'inserted':0.0})
  ExpectedType: Map
  ExpectedJava: r.hashMap("deleted", 50.0).with("replaced", 0.0).with("unchanged", 0.0).with("errors", 0.0).with("skipped", 0.0).with("inserted", 0.0)
  RunOpts: []
- TestType: JavaQuery
  TestFile: mutation/delete.yaml
  TestNum: 7
  Original: r.expr([1, 2]).delete()
  Java: r.expr(r.array(1.0, 2.0)).delete()
  ExpectedOriginal: err('ReqlQueryLogicError', 'Expected type SELECTION but found DATUM:', [0])
  ExpectedType: Err
  ExpectedJava: err("ReqlQueryLogicError", "Expected type SELECTION but found DATUM:", r.array(0.0))
  RunOpts: []
