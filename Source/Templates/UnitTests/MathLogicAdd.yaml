ModuleName: MathLogicAdd
Description: Tests for basic usage of the add operation
DefsAndTests:
- TestType: JavaQuery
  TestFile: math_logic/add.yaml
  LineNum: 3
  Original: r.add(1, 1)
  Java: r.add(1L, 1L)
  ExpectedOriginal: 2
  ExpectedType: Long
  ExpectedJava: 2L
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/add.yaml
  LineNum: 8
  Original: r.expr(1) + 1
  Java: r.expr(1L).add(1L)
  ExpectedOriginal: 2
  ExpectedType: Long
  ExpectedJava: 2L
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/add.yaml
  LineNum: 9
  Original: 1 + r.expr(1)
  Java: r.add(1L, r.expr(1L))
  ExpectedOriginal: 2
  ExpectedType: Long
  ExpectedJava: 2L
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/add.yaml
  LineNum: 10
  Original: r.expr(1).add(1)
  Java: r.expr(1L).add(1L)
  ExpectedOriginal: 2
  ExpectedType: Long
  ExpectedJava: 2L
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/add.yaml
  LineNum: 16
  Original: r.expr(-1) + 1
  Java: r.expr(-1L).add(1L)
  ExpectedOriginal: 0
  ExpectedType: Long
  ExpectedJava: 0L
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/add.yaml
  LineNum: 21
  Original: r.expr(1.75) + 8.5
  Java: r.expr(1.75).add(8.5)
  ExpectedOriginal: 10.25
  ExpectedType: Double
  ExpectedJava: 10.25
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/add.yaml
  LineNum: 27
  Original: r.expr('') + ''
  Java: r.expr("").add("")
  ExpectedOriginal: ''
  ExpectedType: String
  ExpectedJava: '""'
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/add.yaml
  LineNum: 32
  Original: r.expr('abc') + 'def'
  Java: r.expr("abc").add("def")
  ExpectedOriginal: 'abcdef'
  ExpectedType: String
  ExpectedJava: '"abcdef"'
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/add.yaml
  LineNum: 38
  Original: r.expr([1,2]) + [3] + [4,5] + [6,7,8]
  Java: r.expr(r.array(1L, 2L)).add(r.array(3L)).add(r.array(4L, 5L)).add(r.array(6L, 7L, 8L))
  ExpectedOriginal: '[1,2,3,4,5,6,7,8]'
  ExpectedType: List
  ExpectedJava: r.array(1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L)
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/add.yaml
  LineNum: 52
  Original: r.expr(1) + 'a'
  Java: r.expr(1L).add("a")
  ExpectedOriginal: err("ReqlQueryLogicError", "Expected type NUMBER but found STRING.", [1])
  ExpectedType: Err
  ExpectedJava: err("ReqlQueryLogicError", "Expected type NUMBER but found STRING.", r.array(1L))
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/add.yaml
  LineNum: 57
  Original: r.expr('a') + 1
  Java: r.expr("a").add(1L)
  ExpectedOriginal: err("ReqlQueryLogicError", "Expected type STRING but found NUMBER.", [1])
  ExpectedType: Err
  ExpectedJava: err("ReqlQueryLogicError", "Expected type STRING but found NUMBER.", r.array(1L))
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/add.yaml
  LineNum: 62
  Original: r.expr([]) + 1
  Java: r.expr(r.array()).add(1L)
  ExpectedOriginal: err("ReqlQueryLogicError", "Expected type ARRAY but found NUMBER.", [1])
  ExpectedType: Err
  ExpectedJava: err("ReqlQueryLogicError", "Expected type ARRAY but found NUMBER.", r.array(1L))
  RunOpts: []
