ModuleName: ChangefeedsIncludeStates
Description: Test `include_states`
TableVarNames:
- tbl
DefsAndTests:
- TestType: JavaQuery
  TestFile: changefeeds/include_states.yaml
  LineNum: 4
  Original: tbl.changes(squash=true, include_states=true).limit(1)
  Java: tbl.changes().optArg("squash", true).optArg("include_states", true).limit(1L)
  ExpectedOriginal: '[{''state'':''ready''}]'
  ExpectedType: List
  ExpectedJava: r.array(r.hashMap("state", "ready"))
  RunOpts: []
- TestType: JavaQuery
  TestFile: changefeeds/include_states.yaml
  LineNum: 9
  Original: tbl.get(0).changes(squash=true, include_states=true, include_initial=true).limit(3)
  Java: tbl.get(0L).changes().optArg("squash", true).optArg("include_states", true).optArg("include_initial", true).limit(3L)
  ExpectedOriginal: '[{''state'':''initializing''}, {''new_val'':null}, {''state'':''ready''}]'
  ExpectedType: List
  ExpectedJava: r.array(r.hashMap("state", "initializing"), r.hashMap("new_val", null), r.hashMap("state", "ready"))
  RunOpts: []
- TestType: JavaQuery
  TestFile: changefeeds/include_states.yaml
  LineNum: 14
  Original: tbl.order_by(index='id').limit(10).changes(squash=true, include_states=true, include_initial=true).limit(2)
  Java: tbl.orderBy().optArg("index", "id").limit(10L).changes().optArg("squash", true).optArg("include_states", true).optArg("include_initial", true).limit(2L)
  ExpectedOriginal: '[{''state'':''initializing''}, {''state'':''ready''}]'
  ExpectedType: List
  ExpectedJava: r.array(r.hashMap("state", "initializing"), r.hashMap("state", "ready"))
  RunOpts: []
- TestType: JavaQuery
  TestFile: changefeeds/include_states.yaml
  LineNum: 19
  Original: tbl.insert({'id':1})
  Java: tbl.insert(r.hashMap("id", 1L))
  ExpectedOriginal: AnythingIsFine
  ExpectedType: Object
  ExpectedJava: AnythingIsFine
  RunOpts: []
- TestType: JavaQuery
  TestFile: changefeeds/include_states.yaml
  LineNum: 21
  Original: tbl.order_by(index='id').limit(10).changes(squash=true, include_states=true, include_initial=true).limit(3)
  Java: tbl.orderBy().optArg("index", "id").limit(10L).changes().optArg("squash", true).optArg("include_states", true).optArg("include_initial", true).limit(3L)
  ExpectedOriginal: '[{''state'':''initializing''}, {''new_val'':{''id'':1}}, {''state'':''ready''}]'
  ExpectedType: List
  ExpectedJava: r.array(r.hashMap("state", "initializing"), r.hashMap("new_val", r.hashMap("id", 1L)), r.hashMap("state", "ready"))
  RunOpts: []
- TestType: JavaDef
  TestFile: changefeeds/include_states.yaml
  LineNum: 26
  Original: tblchanges = tbl.changes(squash=true, include_states=true)
  VarName: tblchanges
  VarType: Changes
  RunIfQuery: true
  Value: (Changes) (tbl.changes().optArg("squash", true).optArg("include_states", true))
  Java: Changes tblchanges = (Changes) (tbl.changes().optArg("squash", true).optArg("include_states", true));
  RunOpts: []
- TestType: JavaQuery
  TestFile: changefeeds/include_states.yaml
  LineNum: 30
  Original: tbl.insert({'id':2})
  Java: tbl.insert(r.hashMap("id", 2L))
  ExpectedOriginal: AnythingIsFine
  ExpectedType: Object
  ExpectedJava: AnythingIsFine
  RunOpts: []
- TestType: JavaQuery
  TestFile: changefeeds/include_states.yaml
  LineNum: 32
  Original: fetch(tblchanges, 2)
  Java: fetch(tblchanges, 2L)
  ExpectedOriginal: '[{''state'':''ready''},{''new_val'':{''id'':2},''old_val'':null}]'
  ExpectedType: List
  ExpectedJava: r.array(r.hashMap("state", "ready"), r.hashMap("new_val", r.hashMap("id", 2L)).with("old_val", null))
  RunOpts: []
- TestType: JavaDef
  TestFile: changefeeds/include_states.yaml
  LineNum: 35
  Original: getchanges = tbl.get(2).changes(include_states=true, include_initial=true)
  VarName: getchanges
  VarType: Changes
  RunIfQuery: true
  Value: (Changes) (tbl.get(2L).changes().optArg("include_states", true).optArg("include_initial", true))
  Java: Changes getchanges = (Changes) (tbl.get(2L).changes().optArg("include_states", true).optArg("include_initial", true));
  RunOpts: []
- TestType: JavaQuery
  TestFile: changefeeds/include_states.yaml
  LineNum: 39
  Original: tbl.get(2).update({'a':1})
  Java: tbl.get(2L).update(r.hashMap("a", 1L))
  ExpectedOriginal: AnythingIsFine
  ExpectedType: Object
  ExpectedJava: AnythingIsFine
  RunOpts: []
- TestType: JavaQuery
  TestFile: changefeeds/include_states.yaml
  LineNum: 41
  Original: fetch(getchanges, 4)
  Java: fetch(getchanges, 4L)
  ExpectedOriginal: '[{''state'':''initializing''}, {''new_val'':{''id'':2}}, {''state'':''ready''}, {''old_val'':{''id'':2},''new_val'':{''id'':2,''a'':1}}]'
  ExpectedType: List
  ExpectedJava: r.array(r.hashMap("state", "initializing"), r.hashMap("new_val", r.hashMap("id", 2L)), r.hashMap("state", "ready"), r.hashMap("old_val", r.hashMap("id", 2L)).with("new_val", r.hashMap("id", 2L).with("a", 1L)))
  RunOpts: []
- TestType: JavaDef
  TestFile: changefeeds/include_states.yaml
  LineNum: 44
  Original: limitchanges = tbl.order_by(index='id').limit(10).changes(include_states=true, include_initial=true)
  VarName: limitchanges
  VarType: Changes
  RunIfQuery: true
  Value: (Changes) (tbl.orderBy().optArg("index", "id").limit(10L).changes().optArg("include_states", true).optArg("include_initial", true))
  Java: Changes limitchanges = (Changes) (tbl.orderBy().optArg("index", "id").limit(10L).changes().optArg("include_states", true).optArg("include_initial", true));
  RunOpts: []
- TestType: JavaDef
  TestFile: changefeeds/include_states.yaml
  LineNum: 48
  Original: limitchangesdesc = tbl.order_by(index=r.desc('id')).limit(10).changes(include_states=true, include_initial=true)
  VarName: limitchangesdesc
  VarType: Changes
  RunIfQuery: true
  Value: (Changes) (tbl.orderBy().optArg("index", r.desc("id")).limit(10L).changes().optArg("include_states", true).optArg("include_initial", true))
  Java: Changes limitchangesdesc = (Changes) (tbl.orderBy().optArg("index", r.desc("id")).limit(10L).changes().optArg("include_states", true).optArg("include_initial", true));
  RunOpts: []
- TestType: JavaQuery
  TestFile: changefeeds/include_states.yaml
  LineNum: 52
  Original: tbl.insert({'id':3})
  Java: tbl.insert(r.hashMap("id", 3L))
  ExpectedOriginal: AnythingIsFine
  ExpectedType: Object
  ExpectedJava: AnythingIsFine
  RunOpts: []
- TestType: JavaQuery
  TestFile: changefeeds/include_states.yaml
  LineNum: 54
  Original: fetch(limitchanges, 5)
  Java: fetch(limitchanges, 5L)
  ExpectedOriginal: '[{''state'':''initializing''}, {''new_val'':{''id'':1}}, {''new_val'':{''a'':1, ''id'':2}}, {''state'':''ready''}, {''old_val'':null, ''new_val'':{''id'':3}}]'
  ExpectedType: List
  ExpectedJava: r.array(r.hashMap("state", "initializing"), r.hashMap("new_val", r.hashMap("id", 1L)), r.hashMap("new_val", r.hashMap("a", 1L).with("id", 2L)), r.hashMap("state", "ready"), r.hashMap("old_val", null).with("new_val", r.hashMap("id", 3L)))
  RunOpts: []
- TestType: JavaQuery
  TestFile: changefeeds/include_states.yaml
  LineNum: 57
  Original: fetch(limitchangesdesc, 5)
  Java: fetch(limitchangesdesc, 5L)
  ExpectedOriginal: '[{''state'':''initializing''}, {''new_val'':{''a'':1, ''id'':2}}, {''new_val'':{''id'':1}}, {''state'':''ready''}, {''old_val'':null, ''new_val'':{''id'':3}}]'
  ExpectedType: List
  ExpectedJava: r.array(r.hashMap("state", "initializing"), r.hashMap("new_val", r.hashMap("a", 1L).with("id", 2L)), r.hashMap("new_val", r.hashMap("id", 1L)), r.hashMap("state", "ready"), r.hashMap("old_val", null).with("new_val", r.hashMap("id", 3L)))
  RunOpts: []
