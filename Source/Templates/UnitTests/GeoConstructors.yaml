ModuleName: GeoConstructors
DefsAndTests:
- TestType: JavaQuery
  TestFile: geo/constructors.yaml
  TestNum: 1
  Original: ({'$reql_type$':'GEOMETRY', 'coordinates':[0, 0], 'type':'Point'})
  ExpectedType: Map
  ExpectedJava: new MapObject().with("$reql_type$", "GEOMETRY").with("coordinates", Arrays.asList(0, 0)).with("type", "Point")
  Obtained: r.point(0, 0)
- TestType: JavaQuery
  TestFile: geo/constructors.yaml
  TestNum: 2
  Original: ({'$reql_type$':'GEOMETRY', 'coordinates':[0, -90], 'type':'Point'})
  ExpectedType: Map
  ExpectedJava: new MapObject().with("$reql_type$", "GEOMETRY").with("coordinates", Arrays.asList(0, -90)).with("type", "Point")
  Obtained: r.point(0, -90)
- TestType: JavaQuery
  TestFile: geo/constructors.yaml
  TestNum: 3
  Original: ({'$reql_type$':'GEOMETRY', 'coordinates':[0, 90], 'type':'Point'})
  ExpectedType: Map
  ExpectedJava: new MapObject().with("$reql_type$", "GEOMETRY").with("coordinates", Arrays.asList(0, 90)).with("type", "Point")
  Obtained: r.point(0, 90)
- TestType: JavaQuery
  TestFile: geo/constructors.yaml
  TestNum: 4
  Original: ({'$reql_type$':'GEOMETRY', 'coordinates':[-180, 0], 'type':'Point'})
  ExpectedType: Map
  ExpectedJava: new MapObject().with("$reql_type$", "GEOMETRY").with("coordinates", Arrays.asList(-180, 0)).with("type", "Point")
  Obtained: r.point(-180, 0)
- TestType: JavaQuery
  TestFile: geo/constructors.yaml
  TestNum: 5
  Original: ({'$reql_type$':'GEOMETRY', 'coordinates':[180, 0], 'type':'Point'})
  ExpectedType: Map
  ExpectedJava: new MapObject().with("$reql_type$", "GEOMETRY").with("coordinates", Arrays.asList(180, 0)).with("type", "Point")
  Obtained: r.point(180, 0)
- TestType: JavaQuery
  TestFile: geo/constructors.yaml
  TestNum: 6
  Original: err('ReqlQueryLogicError', 'Latitude must be between -90 and 90.  Got -91.', [0])
  ExpectedType: Err
  ExpectedJava: err("ReqlQueryLogicError", "Latitude must be between -90 and 90.  Got -91.", Arrays.asList(0))
  Obtained: r.point(0, -91)
- TestType: JavaQuery
  TestFile: geo/constructors.yaml
  TestNum: 7
  Original: err('ReqlQueryLogicError', 'Latitude must be between -90 and 90.  Got 91.', [0])
  ExpectedType: Err
  ExpectedJava: err("ReqlQueryLogicError", "Latitude must be between -90 and 90.  Got 91.", Arrays.asList(0))
  Obtained: r.point(0, 91)
- TestType: JavaQuery
  TestFile: geo/constructors.yaml
  TestNum: 8
  Original: err('ReqlQueryLogicError', 'Longitude must be between -180 and 180.  Got -181.', [0])
  ExpectedType: Err
  ExpectedJava: err("ReqlQueryLogicError", "Longitude must be between -180 and 180.  Got -181.", Arrays.asList(0))
  Obtained: r.point(-181, 0)
- TestType: JavaQuery
  TestFile: geo/constructors.yaml
  TestNum: 9
  Original: err('ReqlQueryLogicError', 'Longitude must be between -180 and 180.  Got 181.', [0])
  ExpectedType: Err
  ExpectedJava: err("ReqlQueryLogicError", "Longitude must be between -180 and 180.  Got 181.", Arrays.asList(0))
  Obtained: r.point(181, 0)
- TestType: JavaQuery
  TestFile: geo/constructors.yaml
  TestNum: 10
  Original: err('ReqlCompileError', 'Expected 2 or more arguments but found 0.', [0])
  ExpectedType: Err
  ExpectedJava: err("ReqlCompileError", "Expected 2 or more arguments but found 0.", Arrays.asList(0))
  Obtained: r.line()
- TestType: JavaQuery
  TestFile: geo/constructors.yaml
  TestNum: 11
  Original: err('ReqlCompileError', 'Expected 2 or more arguments but found 1.', [0])
  ExpectedType: Err
  ExpectedJava: err("ReqlCompileError", "Expected 2 or more arguments but found 1.", Arrays.asList(0))
  Obtained: r.line(Arrays.asList(0, 0))
- TestType: JavaQuery
  TestFile: geo/constructors.yaml
  TestNum: 12
  Original: err('ReqlQueryLogicError', 'Invalid LineString.  Are there antipodal or duplicate vertices?', [0])
  ExpectedType: Err
  ExpectedJava: err("ReqlQueryLogicError", "Invalid LineString.  Are there antipodal or duplicate vertices?", Arrays.asList(0))
  Obtained: r.line(Arrays.asList(0, 0), Arrays.asList(0, 0))
- TestType: JavaQuery
  TestFile: geo/constructors.yaml
  TestNum: 13
  Original: ({'$reql_type$':'GEOMETRY', 'coordinates':[[0,0], [0,1]], 'type':'LineString'})
  ExpectedType: Map
  ExpectedJava: new MapObject().with("$reql_type$", "GEOMETRY").with("coordinates", Arrays.asList(Arrays.asList(0, 0), Arrays.asList(0, 1))).with("type", "LineString")
  Obtained: r.line(Arrays.asList(0, 0), Arrays.asList(0, 1))
- TestType: JavaQuery
  TestFile: geo/constructors.yaml
  TestNum: 14
  Original: err('ReqlQueryLogicError', 'Expected point coordinate pair.  Got 1 element array instead of a 2 element one.', [0])
  ExpectedType: Err
  ExpectedJava: err("ReqlQueryLogicError", "Expected point coordinate pair.  Got 1 element array instead of a 2 element one.", Arrays.asList(0))
  Obtained: r.line(Arrays.asList(0, 0), Arrays.asList(1))
- TestType: JavaQuery
  TestFile: geo/constructors.yaml
  TestNum: 15
  Original: err('ReqlQueryLogicError', 'Expected point coordinate pair.  Got 3 element array instead of a 2 element one.', [0])
  ExpectedType: Err
  ExpectedJava: err("ReqlQueryLogicError", "Expected point coordinate pair.  Got 3 element array instead of a 2 element one.", Arrays.asList(0))
  Obtained: r.line(Arrays.asList(0, 0), Arrays.asList(1, 0, 0))
- TestType: JavaQuery
  TestFile: geo/constructors.yaml
  TestNum: 16
  Original: ({'$reql_type$':'GEOMETRY', 'coordinates':[[0,0], [0,1], [0,0]], 'type':'LineString'})
  ExpectedType: Map
  ExpectedJava: new MapObject().with("$reql_type$", "GEOMETRY").with("coordinates", Arrays.asList(Arrays.asList(0, 0), Arrays.asList(0, 1), Arrays.asList(0, 0))).with("type", "LineString")
  Obtained: r.line(Arrays.asList(0, 0), Arrays.asList(0, 1), Arrays.asList(0, 0))
- TestType: JavaQuery
  TestFile: geo/constructors.yaml
  TestNum: 17
  Original: ({'$reql_type$':'GEOMETRY', 'coordinates':[[0,0], [0,1], [0,0]], 'type':'LineString'})
  ExpectedType: Map
  ExpectedJava: new MapObject().with("$reql_type$", "GEOMETRY").with("coordinates", Arrays.asList(Arrays.asList(0, 0), Arrays.asList(0, 1), Arrays.asList(0, 0))).with("type", "LineString")
  Obtained: r.line(r.point(0, 0), r.point(0, 1), r.point(0, 0))
- TestType: JavaQuery
  TestFile: geo/constructors.yaml
  TestNum: 18
  Original: err('ReqlQueryLogicError', 'Expected geometry of type `Point` but found `LineString`.', [0])
  ExpectedType: Err
  ExpectedJava: err("ReqlQueryLogicError", "Expected geometry of type `Point` but found `LineString`.", Arrays.asList(0))
  Obtained: r.line(r.point(0, 0), r.point(1, 0), r.line(Arrays.asList(0, 0), Arrays.asList(1, 0)))
- TestType: JavaQuery
  TestFile: geo/constructors.yaml
  TestNum: 19
  Original: err('ReqlCompileError', 'Expected 3 or more arguments but found 0.', [0])
  ExpectedType: Err
  ExpectedJava: err("ReqlCompileError", "Expected 3 or more arguments but found 0.", Arrays.asList(0))
  Obtained: r.polygon()
- TestType: JavaQuery
  TestFile: geo/constructors.yaml
  TestNum: 20
  Original: err('ReqlCompileError', 'Expected 3 or more arguments but found 1.', [0])
  ExpectedType: Err
  ExpectedJava: err("ReqlCompileError", "Expected 3 or more arguments but found 1.", Arrays.asList(0))
  Obtained: r.polygon(Arrays.asList(0, 0))
- TestType: JavaQuery
  TestFile: geo/constructors.yaml
  TestNum: 21
  Original: err('ReqlCompileError', 'Expected 3 or more arguments but found 2.', [0])
  ExpectedType: Err
  ExpectedJava: err("ReqlCompileError", "Expected 3 or more arguments but found 2.", Arrays.asList(0))
  Obtained: r.polygon(Arrays.asList(0, 0), Arrays.asList(0, 0))
- TestType: JavaQuery
  TestFile: geo/constructors.yaml
  TestNum: 22
  Original: err('ReqlQueryLogicError', 'Invalid LinearRing.  Are there antipodal or duplicate vertices? Is it self-intersecting?', [0])
  ExpectedType: Err
  ExpectedJava: err("ReqlQueryLogicError", "Invalid LinearRing.  Are there antipodal or duplicate vertices? Is it self-intersecting?", Arrays.asList(0))
  Obtained: r.polygon(Arrays.asList(0, 0), Arrays.asList(0, 0), Arrays.asList(0, 0), Arrays.asList(0, 0))
- TestType: JavaQuery
  TestFile: geo/constructors.yaml
  TestNum: 23
  Original: ({'$reql_type$':'GEOMETRY', 'coordinates':[[[0,0], [0,1], [1,0], [0,0]]], 'type':'Polygon'})
  ExpectedType: Map
  ExpectedJava: new MapObject().with("$reql_type$", "GEOMETRY").with("coordinates", Arrays.asList(Arrays.asList(Arrays.asList(0, 0), Arrays.asList(0, 1), Arrays.asList(1, 0), Arrays.asList(0, 0)))).with("type", "Polygon")
  Obtained: r.polygon(Arrays.asList(0, 0), Arrays.asList(0, 1), Arrays.asList(1, 0))
- TestType: JavaQuery
  TestFile: geo/constructors.yaml
  TestNum: 24
  Original: ({'$reql_type$':'GEOMETRY', 'coordinates':[[[0,0], [0,1], [1,0], [0,0]]], 'type':'Polygon'})
  ExpectedType: Map
  ExpectedJava: new MapObject().with("$reql_type$", "GEOMETRY").with("coordinates", Arrays.asList(Arrays.asList(Arrays.asList(0, 0), Arrays.asList(0, 1), Arrays.asList(1, 0), Arrays.asList(0, 0)))).with("type", "Polygon")
  Obtained: r.polygon(Arrays.asList(0, 0), Arrays.asList(0, 1), Arrays.asList(1, 0), Arrays.asList(0, 0))
- TestType: JavaQuery
  TestFile: geo/constructors.yaml
  TestNum: 25
  Original: err('ReqlQueryLogicError', 'Invalid LinearRing.  Are there antipodal or duplicate vertices? Is it self-intersecting?', [0])
  ExpectedType: Err
  ExpectedJava: err("ReqlQueryLogicError", "Invalid LinearRing.  Are there antipodal or duplicate vertices? Is it self-intersecting?", Arrays.asList(0))
  Obtained: r.polygon(Arrays.asList(0, 0), Arrays.asList(0, 1), Arrays.asList(1, 0), Arrays.asList(-1, 0.5))
- TestType: JavaQuery
  TestFile: geo/constructors.yaml
  TestNum: 26
  Original: err('ReqlQueryLogicError', 'Expected point coordinate pair.  Got 1 element array instead of a 2 element one.', [0])
  ExpectedType: Err
  ExpectedJava: err("ReqlQueryLogicError", "Expected point coordinate pair.  Got 1 element array instead of a 2 element one.", Arrays.asList(0))
  Obtained: r.polygon(Arrays.asList(0, 0), Arrays.asList(0, 1), Arrays.asList(0))
- TestType: JavaQuery
  TestFile: geo/constructors.yaml
  TestNum: 27
  Original: err('ReqlQueryLogicError', 'Expected point coordinate pair.  Got 3 element array instead of a 2 element one.', [0])
  ExpectedType: Err
  ExpectedJava: err("ReqlQueryLogicError", "Expected point coordinate pair.  Got 3 element array instead of a 2 element one.", Arrays.asList(0))
  Obtained: r.polygon(Arrays.asList(0, 0), Arrays.asList(0, 1), Arrays.asList(0, 1, 0))
- TestType: JavaQuery
  TestFile: geo/constructors.yaml
  TestNum: 28
  Original: err('ReqlQueryLogicError', 'Expected geometry of type `Point` but found `LineString`.', [0])
  ExpectedType: Err
  ExpectedJava: err("ReqlQueryLogicError", "Expected geometry of type `Point` but found `LineString`.", Arrays.asList(0))
  Obtained: r.polygon(r.point(0, 0), r.point(0, 1), r.line(Arrays.asList(0, 0), Arrays.asList(0, 1)))
