ModuleName: MathLogicComparison
DefsAndTests:
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 1
  Original: r.expr(1) < 2
  Java: r.expr(1).lt(2)
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 1
  Original: 1 < r.expr(2)
  Java: r.lt(1, r.expr(2))
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 1
  Original: r.expr(1).lt(2)
  Java: r.expr(1).lt(2)
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 2
  Original: r.expr(3) < 2
  Java: r.expr(3).lt(2)
  ExpectedOriginal: False
  ExpectedType: Boolean
  ExpectedJava: false
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 3
  Original: r.expr(2) < 2
  Java: r.expr(2).lt(2)
  ExpectedOriginal: False
  ExpectedType: Boolean
  ExpectedJava: false
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 6
  Original: r.expr(1) > 2
  Java: r.expr(1).gt(2)
  ExpectedOriginal: False
  ExpectedType: Boolean
  ExpectedJava: false
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 6
  Original: 1 > r.expr(2)
  Java: r.gt(1, r.expr(2))
  ExpectedOriginal: False
  ExpectedType: Boolean
  ExpectedJava: false
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 6
  Original: r.expr(1).gt(2)
  Java: r.expr(1).gt(2)
  ExpectedOriginal: False
  ExpectedType: Boolean
  ExpectedJava: false
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 7
  Original: r.expr(3) > 2
  Java: r.expr(3).gt(2)
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 8
  Original: r.expr(2) > 2
  Java: r.expr(2).gt(2)
  ExpectedOriginal: False
  ExpectedType: Boolean
  ExpectedJava: false
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 11
  Original: r.expr(1) == 2
  Java: r.expr(1).eq(2)
  ExpectedOriginal: False
  ExpectedType: Boolean
  ExpectedJava: false
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 11
  Original: 1 == r.expr(2)
  Java: r.eq(1, r.expr(2))
  ExpectedOriginal: False
  ExpectedType: Boolean
  ExpectedJava: false
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 11
  Original: r.expr(1).eq(2)
  Java: r.expr(1).eq(2)
  ExpectedOriginal: False
  ExpectedType: Boolean
  ExpectedJava: false
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 12
  Original: r.expr(3) == 2
  Java: r.expr(3).eq(2)
  ExpectedOriginal: False
  ExpectedType: Boolean
  ExpectedJava: false
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 13
  Original: r.expr(2) == 2
  Java: r.expr(2).eq(2)
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 16
  Original: r.expr(1) != 2
  Java: r.expr(1).ne(2)
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 16
  Original: 1 != r.expr(2)
  Java: r.ne(1, r.expr(2))
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 16
  Original: r.expr(1).ne(2)
  Java: r.expr(1).ne(2)
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 17
  Original: r.expr(3) != 2
  Java: r.expr(3).ne(2)
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 18
  Original: r.expr(2) != 2
  Java: r.expr(2).ne(2)
  ExpectedOriginal: False
  ExpectedType: Boolean
  ExpectedJava: false
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 21
  Original: r.expr(1) <= 2
  Java: r.expr(1).le(2)
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 21
  Original: 1 <= r.expr(2)
  Java: r.le(1, r.expr(2))
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 21
  Original: r.expr(1).le(2)
  Java: r.expr(1).le(2)
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 22
  Original: r.expr(3) <= 2
  Java: r.expr(3).le(2)
  ExpectedOriginal: False
  ExpectedType: Boolean
  ExpectedJava: false
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 23
  Original: r.expr(2) <= 2
  Java: r.expr(2).le(2)
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 26
  Original: r.expr(1) >= 2
  Java: r.expr(1).ge(2)
  ExpectedOriginal: False
  ExpectedType: Boolean
  ExpectedJava: false
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 26
  Original: 1 >= r.expr(2)
  Java: r.ge(1, r.expr(2))
  ExpectedOriginal: False
  ExpectedType: Boolean
  ExpectedJava: false
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 26
  Original: r.expr(1).ge(2)
  Java: r.expr(1).ge(2)
  ExpectedOriginal: False
  ExpectedType: Boolean
  ExpectedJava: false
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 27
  Original: r.expr(3) >= 2
  Java: r.expr(3).ge(2)
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 28
  Original: r.expr(2) >= 2
  Java: r.expr(2).ge(2)
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 31
  Original: r.expr(null) == null
  Java: r.expr((ReqlExpr) null).eq(null)
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 31
  Original: null == r.expr(null)
  Java: r.eq(null, r.expr((ReqlExpr) null))
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 32
  Original: r.expr(null) < null
  Java: r.expr((ReqlExpr) null).lt(null)
  ExpectedOriginal: False
  ExpectedType: Boolean
  ExpectedJava: false
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 32
  Original: null < r.expr(null)
  Java: r.lt(null, r.expr((ReqlExpr) null))
  ExpectedOriginal: False
  ExpectedType: Boolean
  ExpectedJava: false
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 32
  Original: r.expr(null).gt(null)
  Java: r.expr((ReqlExpr) null).gt((ReqlExpr) null)
  ExpectedOriginal: False
  ExpectedType: Boolean
  ExpectedJava: false
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 33
  Original: r.expr(null) > null
  Java: r.expr((ReqlExpr) null).gt(null)
  ExpectedOriginal: False
  ExpectedType: Boolean
  ExpectedJava: false
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 33
  Original: null > r.expr(null)
  Java: r.gt(null, r.expr((ReqlExpr) null))
  ExpectedOriginal: False
  ExpectedType: Boolean
  ExpectedJava: false
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 33
  Original: r.expr(null).lt(null)
  Java: r.expr((ReqlExpr) null).lt((ReqlExpr) null)
  ExpectedOriginal: False
  ExpectedType: Boolean
  ExpectedJava: false
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 34
  Original: r.expr('a') == 'a'
  Java: r.expr("a").eq("a")
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 35
  Original: r.expr('a') == 'aa'
  Java: r.expr("a").eq("aa")
  ExpectedOriginal: False
  ExpectedType: Boolean
  ExpectedJava: false
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 36
  Original: r.expr('a') < 'aa'
  Java: r.expr("a").lt("aa")
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 37
  Original: r.expr('a') < 'bb'
  Java: r.expr("a").lt("bb")
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 38
  Original: r.expr('bb') > 'a'
  Java: r.expr("bb").gt("a")
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 39
  Original: r.expr('abcdef') < 'abcdeg'
  Java: r.expr("abcdef").lt("abcdeg")
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 40
  Original: r.expr('abcdefg') > 'abcdeg'
  Java: r.expr("abcdefg").gt("abcdeg")
  ExpectedOriginal: False
  ExpectedType: Boolean
  ExpectedJava: false
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 41
  Original: r.expr('A quick brown fox') > 'A quick brawn fox'
  Java: r.expr("A quick brown fox").gt("A quick brawn fox")
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 42
  Original: r.expr([1]) < [2]
  Java: r.expr(r.array(1)).lt(r.array(2))
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 43
  Original: r.expr([1]) > [2]
  Java: r.expr(r.array(1)).gt(r.array(2))
  ExpectedOriginal: False
  ExpectedType: Boolean
  ExpectedJava: false
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 44
  Original: r.expr([1, 0]) < [2]
  Java: r.expr(r.array(1, 0)).lt(r.array(2))
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 45
  Original: r.expr([1, 0]) < [1]
  Java: r.expr(r.array(1, 0)).lt(r.array(1))
  ExpectedOriginal: False
  ExpectedType: Boolean
  ExpectedJava: false
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 46
  Original: r.expr([1, 0]) > [0]
  Java: r.expr(r.array(1, 0)).gt(r.array(0))
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 47
  Original: r.expr([1, 'a']) < [1, 'b']
  Java: r.expr(r.array(1, "a")).lt(r.array(1, "b"))
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 48
  Original: r.expr([0, 'z']) < [1, 'b']
  Java: r.expr(r.array(0, "z")).lt(r.array(1, "b"))
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 49
  Original: r.expr([1, 1, 1]) < [1, 0, 2]
  Java: r.expr(r.array(1, 1, 1)).lt(r.array(1, 0, 2))
  ExpectedOriginal: False
  ExpectedType: Boolean
  ExpectedJava: false
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 50
  Original: r.expr([1, 0, 2]) < [1, 1, 1]
  Java: r.expr(r.array(1, 0, 2)).lt(r.array(1, 1, 1))
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 51
  Original: r.expr({'a':0}) == {'a':0}
  Java: r.expr(r.hashMap("a", 0)).eq(r.hashMap("a", 0))
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 52
  Original: r.expr({'a':0, 'b':1}) == {'b':1, 'a':0}
  Java: r.expr(r.hashMap("a", 0).with("b", 1)).eq(r.hashMap("b", 1).with("a", 0))
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 53
  Original: r.expr({'a':0, 'b':1, 'c':2}) == {'b':1, 'a':0}
  Java: r.expr(r.hashMap("a", 0).with("b", 1).with("c", 2)).eq(r.hashMap("b", 1).with("a", 0))
  ExpectedOriginal: False
  ExpectedType: Boolean
  ExpectedJava: false
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 54
  Original: r.expr({'a':0, 'b':1}) == {'b':1, 'a':0, 'c':2}
  Java: r.expr(r.hashMap("a", 0).with("b", 1)).eq(r.hashMap("b", 1).with("a", 0).with("c", 2))
  ExpectedOriginal: False
  ExpectedType: Boolean
  ExpectedJava: false
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 55
  Original: r.expr({'a':0, 'b':1, 'd':2}) == {'b':1, 'a':0, 'c':2}
  Java: r.expr(r.hashMap("a", 0).with("b", 1).with("d", 2)).eq(r.hashMap("b", 1).with("a", 0).with("c", 2))
  ExpectedOriginal: False
  ExpectedType: Boolean
  ExpectedJava: false
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 56
  Original: r.expr({'a':0}) < {'b':0}
  Java: r.expr(r.hashMap("a", 0)).lt(r.hashMap("b", 0))
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 57
  Original: r.expr({'a':1}) < {'b':0}
  Java: r.expr(r.hashMap("a", 1)).lt(r.hashMap("b", 0))
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 58
  Original: r.expr({'b':1}) < {'b':0}
  Java: r.expr(r.hashMap("b", 1)).lt(r.hashMap("b", 0))
  ExpectedOriginal: False
  ExpectedType: Boolean
  ExpectedJava: false
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 59
  Original: r.expr({'b':1}) < {'a':0}
  Java: r.expr(r.hashMap("b", 1)).lt(r.hashMap("a", 0))
  ExpectedOriginal: False
  ExpectedType: Boolean
  ExpectedJava: false
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 60
  Original: r.expr({'a':0, 'b':1, 'c':2}) < {'a':0, 'b':1, 'c':2}
  Java: r.expr(r.hashMap("a", 0).with("b", 1).with("c", 2)).lt(r.hashMap("a", 0).with("b", 1).with("c", 2))
  ExpectedOriginal: False
  ExpectedType: Boolean
  ExpectedJava: false
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 61
  Original: r.expr({'a':0, 'b':1, 'c':2, 'd':3}) < {'a':0, 'b':1, 'c':2}
  Java: r.expr(r.hashMap("a", 0).with("b", 1).with("c", 2).with("d", 3)).lt(r.hashMap("a", 0).with("b", 1).with("c", 2))
  ExpectedOriginal: False
  ExpectedType: Boolean
  ExpectedJava: false
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 62
  Original: r.expr({'a':0, 'b':1, 'c':2}) < {'a':0, 'b':1, 'c':2, 'd':3}
  Java: r.expr(r.hashMap("a", 0).with("b", 1).with("c", 2)).lt(r.hashMap("a", 0).with("b", 1).with("c", 2).with("d", 3))
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 63
  Original: r.expr({'a':0, 'c':2}) < {'a':0, 'b':1, 'c':2}
  Java: r.expr(r.hashMap("a", 0).with("c", 2)).lt(r.hashMap("a", 0).with("b", 1).with("c", 2))
  ExpectedOriginal: False
  ExpectedType: Boolean
  ExpectedJava: false
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 64
  Original: r.expr({'a':0, 'c':2}) > {'a':0, 'b':1, 'c':2}
  Java: r.expr(r.hashMap("a", 0).with("c", 2)).gt(r.hashMap("a", 0).with("b", 1).with("c", 2))
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaDef
  TestFile: math_logic/comparison.yaml
  TestNum: 65
  Original: everything = r.expr([[],r.now(),r.binary(b"\x00"),false,null,-5,{},"a",r.maxval])
  Java: MakeArray everything = (MakeArray) (r.expr(r.array(r.array(), r.now(), r.binary(new byte[]{0}), false, null, -5, r.hashMap(), "a", r.maxval())));
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 68
  Original: r.eq(r.minval, r.minval)
  Java: r.eq(r.minval(), r.minval())
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 69
  Original: r.expr([]) < True
  Java: r.expr(r.array()).lt(true)
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 70
  Original: r.expr([1,2]) < False
  Java: r.expr(r.array(1, 2)).lt(false)
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 71
  Original: r.expr(False) < []
  Java: r.expr(false).lt(r.array())
  ExpectedOriginal: None
  ExpectedType: Object
  ExpectedJava: null
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 72
  Original: r.expr([]) < r.binary(b"\xAE")
  Java: r.expr(r.array()).lt(r.binary(new byte[]{-82}))
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 73
  Original: r.expr([1,2]) < r.binary(b"\xAE")
  Java: r.expr(r.array(1, 2)).lt(r.binary(new byte[]{-82}))
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 74
  Original: True < r.expr(null)
  Java: r.lt(true, r.expr((ReqlExpr) null))
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 75
  Original: r.expr(null) > []
  Java: r.expr((ReqlExpr) null).gt(r.array())
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 76
  Original: r.expr(null) < 12
  Java: r.expr((ReqlExpr) null).lt(12)
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 77
  Original: r.expr(null) < -2
  Java: r.expr((ReqlExpr) null).lt(-2)
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 78
  Original: r.expr(-12) < {}
  Java: r.expr(-12).lt(r.hashMap())
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 79
  Original: r.expr(100) < {'a':-12}
  Java: r.expr(100).lt(r.hashMap("a", -12))
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 80
  Original: r.expr(r.binary(b"\xAE")) < 12
  Java: r.expr(r.binary(new byte[]{-82})).lt(12)
  ExpectedOriginal: False
  ExpectedType: Boolean
  ExpectedJava: false
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 81
  Original: r.binary(b"0xAE") < 'abc'
  Java: r.binary(new byte[]{48, 120, 65, 69}).lt("abc")
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 82
  Original: r.binary(b"0xAE") > r.now()
  Java: r.binary(new byte[]{48, 120, 65, 69}).gt(r.now())
  ExpectedOriginal: False
  ExpectedType: Boolean
  ExpectedJava: false
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 83
  Original: r.now() > 12
  Java: r.now().gt(12)
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 84
  Original: r.now() > 'abc'
  Java: r.now().gt("abc")
  ExpectedOriginal: False
  ExpectedType: Boolean
  ExpectedJava: false
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 85
  Original: r.expr("abc") > {'a':-12}
  Java: r.expr("abc").gt(r.hashMap("a", -12))
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 86
  Original: r.expr("abc") > {'abc':'abc'}
  Java: r.expr("abc").gt(r.hashMap("abc", "abc"))
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 87
  Original: r.expr('zzz') > 128
  Java: r.expr("zzz").gt(128)
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 88
  Original: r.expr('zzz') > {}
  Java: r.expr("zzz").gt(r.hashMap())
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 89
  Original: '"''zzz'' > r.expr(-152)"'
  Java: r.gt("zzz", r.expr(-152))
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 90
  Original: '"''zzz'' > r.expr(null)"'
  Java: r.gt("zzz", r.expr((ReqlExpr) null))
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 91
  Original: '"''zzz'' > r.expr([])"'
  Java: r.gt("zzz", r.expr(r.array()))
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
- TestType: JavaDef
  TestFile: math_logic/comparison.yaml
  TestNum: 92
  Original: everything2 = r.expr([r.minval,[],r.now(),r.binary(b"\x00"),false,null,-5,{},"a"])
  Java: MakeArray everything2 = (MakeArray) (r.expr(r.array(r.minval(), r.array(), r.now(), r.binary(new byte[]{0}), false, null, -5, r.hashMap(), "a")));
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/comparison.yaml
  TestNum: 95
  Original: r.eq(r.maxval, r.maxval)
  Java: r.eq(r.maxval(), r.maxval())
  ExpectedOriginal: True
  ExpectedType: Boolean
  ExpectedJava: true
  RunOpts: []
