ModuleName: Regression2774
TableVarNames:
- tbl
DefsAndTests:
- TestType: JavaDef
  TestFile: regression/2774.yaml
  TestNum: 1
  Original: binary_a = r.binary(b'')
  Java: Binary binary_a = (Binary) (r.binary(new byte[]{}));
  RunOpts: []
- TestType: JavaDef
  TestFile: regression/2774.yaml
  TestNum: 2
  Original: binary_trunc1 = r.binary(b'123456789012345678901234567890123456789012345678901234567890' + b'123456789012345678901234567890123456789012345678901234567890')
  Java: Binary binary_trunc1 = (Binary) (r.binary(new byte[]{49, 50, 51, 52, 53, 54, 55, 56, 57, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 48}));
  RunOpts: []
- TestType: JavaDef
  TestFile: regression/2774.yaml
  TestNum: 3
  Original: binary_trunc2 = r.binary(b'123456789012345678901234567890123456789012345678901234567890' + b'123456789012345678901234567890123456789012345678901234567891')
  Java: Binary binary_trunc2 = (Binary) (r.binary(new byte[]{49, 50, 51, 52, 53, 54, 55, 56, 57, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 49}));
  RunOpts: []
- TestType: JavaDef
  TestFile: regression/2774.yaml
  TestNum: 4
  Original: binary_b = r.binary(b'5aurhbviunr')
  Java: Binary binary_b = (Binary) (r.binary(new byte[]{53, 97, 117, 114, 104, 98, 118, 105, 117, 110, 114}));
  RunOpts: []
- TestType: JavaDef
  TestFile: regression/2774.yaml
  TestNum: 5
  Original: str_trunc1 = '123456789012345678901234567890123456789012345678901234567890' + '123456789012345678901234567890123456789012345678901234567890'
  Java: String str_trunc1 = (String) ("123456789012345678901234567890123456789012345678901234567890" + "123456789012345678901234567890123456789012345678901234567890");
  RunOpts: []
- TestType: JavaDef
  TestFile: regression/2774.yaml
  TestNum: 6
  Original: str_trunc2 = '123456789012345678901234567890123456789012345678901234567890' + '123456789012345678901234567890123456789012345678901234567891'
  Java: String str_trunc2 = (String) ("123456789012345678901234567890123456789012345678901234567890" + "123456789012345678901234567890123456789012345678901234567891");
  RunOpts: []
- TestType: JavaDef
  TestFile: regression/2774.yaml
  TestNum: 7
  Original: trows = [{'id':0,'idx':[0]}, {'id':1,'idx':[1, 2, 3, 4, 5, 6, 7, 0]}, {'id':2,'idx':[1, 2, 3, 4, 5, 6, 7, 4]}, {'id':3,'idx':[1, 2, 3, 4, 5, 6, 7, 4, 5]}, {'id':4,'idx':[1, 2, 3, 4, 5, 6, 7, 8, 1]}, {'id':5,'idx':[1, 3, binary_trunc1]}, {'id':6,'idx':[1, 3, binary_trunc2]}, {'id':7,'idx':[1, 3, r.epoch_time(0), r.epoch_time(0), r.epoch_time(0)]}, {'id':8,'idx':[1, 3, r.epoch_time(0), r.epoch_time(0), r.epoch_time(0), r.epoch_time(0)]}, {'id':9,'idx':[1, 3, r.epoch_time(0), r.epoch_time(0), r.epoch_time(0), r.epoch_time(1)]}, {'id':10,'idx':[1, 3, str_trunc1, str_trunc1]}, {'id':11,'idx':[1, 3, str_trunc1, str_trunc2]}, {'id':12,'idx':[1, 4, 3, 4, 5, 6, 7, 8, 2]}, {'id':13,'idx':[binary_trunc1]}, {'id':14,'idx':[binary_trunc2]}, {'id':15,'idx':False}, {'id':16,'idx':True}, {'id':17,'idx':-500}, {'id':18,'idx':500}, {'id':19,'idx':binary_a}, {'id':20,'idx':binary_trunc1}, {'id':21,'idx':binary_trunc2}, {'id':22,'idx':binary_b}, {'id':23,'idx':r.epoch_time(0)}, {'id':24,'idx':''}, {'id':25,'idx':' str'}, {'id':26,'idx':str_trunc1}, {'id':27,'idx':str_trunc2}]
  Java: List trows = (List) (r.array(r.hashMap("id", 0).with("idx", r.array(0)), r.hashMap("id", 1).with("idx", r.array(1, 2, 3, 4, 5, 6, 7, 0)), r.hashMap("id", 2).with("idx", r.array(1, 2, 3, 4, 5, 6, 7, 4)), r.hashMap("id", 3).with("idx", r.array(1, 2, 3, 4, 5, 6, 7, 4, 5)), r.hashMap("id", 4).with("idx", r.array(1, 2, 3, 4, 5, 6, 7, 8, 1)), r.hashMap("id", 5).with("idx", r.array(1, 3, binary_trunc1)), r.hashMap("id", 6).with("idx", r.array(1, 3, binary_trunc2)), r.hashMap("id", 7).with("idx", r.array(1, 3, r.epochTime(0), r.epochTime(0), r.epochTime(0))), r.hashMap("id", 8).with("idx", r.array(1, 3, r.epochTime(0), r.epochTime(0), r.epochTime(0), r.epochTime(0))), r.hashMap("id", 9).with("idx", r.array(1, 3, r.epochTime(0), r.epochTime(0), r.epochTime(0), r.epochTime(1))), r.hashMap("id", 10).with("idx", r.array(1, 3, str_trunc1, str_trunc1)), r.hashMap("id", 11).with("idx", r.array(1, 3, str_trunc1, str_trunc2)), r.hashMap("id", 12).with("idx", r.array(1, 4, 3, 4, 5, 6, 7, 8, 2)), r.hashMap("id", 13).with("idx", r.array(binary_trunc1)), r.hashMap("id", 14).with("idx", r.array(binary_trunc2)), r.hashMap("id", 15).with("idx", false), r.hashMap("id", 16).with("idx", true), r.hashMap("id", 17).with("idx", -500), r.hashMap("id", 18).with("idx", 500), r.hashMap("id", 19).with("idx", binary_a), r.hashMap("id", 20).with("idx", binary_trunc1), r.hashMap("id", 21).with("idx", binary_trunc2), r.hashMap("id", 22).with("idx", binary_b), r.hashMap("id", 23).with("idx", r.epochTime(0)), r.hashMap("id", 24).with("idx", ""), r.hashMap("id", 25).with("idx", " str"), r.hashMap("id", 26).with("idx", str_trunc1), r.hashMap("id", 27).with("idx", str_trunc2)));
  RunOpts: []
- TestType: JavaDef
  TestFile: regression/2774.yaml
  TestNum: 8
  Original: expected = r.range(tbl.count()).coerce_to('array')
  Java: CoerceTo expected = (CoerceTo) (r.range(tbl.count()).coerceTo("array"));
  RunOpts: []
- TestType: JavaQuery
  TestFile: regression/2774.yaml
  TestNum: 9
  Original: tbl.insert(trows)['inserted']
  Java: tbl.insert(trows).g("inserted")
  ExpectedOriginal: 28
  ExpectedType: Long
  ExpectedJava: 28
  RunOpts: []
- TestType: JavaQuery
  TestFile: regression/2774.yaml
  TestNum: 10
  Original: tbl.index_create('idx')
  Java: tbl.indexCreate("idx")
  ExpectedOriginal: ({'created':1})
  ExpectedType: Map
  ExpectedJava: r.hashMap("created", 1)
  RunOpts: []
- TestType: JavaQuery
  TestFile: regression/2774.yaml
  TestNum: 11
  Original: tbl.index_wait('idx').pluck('index', 'ready')
  Java: tbl.indexWait("idx").pluck("index", "ready")
  ExpectedOriginal: '[{''ready'': True, ''index'': ''idx''}]'
  ExpectedType: List
  ExpectedJava: r.array(r.hashMap("ready", true).with("index", "idx"))
  RunOpts: []
