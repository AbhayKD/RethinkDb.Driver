ModuleName: Regression354
DefsAndTests:
- TestType: JavaDef
  TestFile: regression/354.yaml
  TestNum: 1
  Original: arr = r.expr([1,2,3,4,5])
  Java: MakeArray arr = (MakeArray) r.expr(Arrays.asList(1, 2, 3, 4, 5));
- TestType: JavaQuery
  TestFile: regression/354.yaml
  TestNum: 2
  Original: '[3, 4, 5]'
  ExpectedType: List
  ExpectedJava: Arrays.asList(3, 4, 5)
  Obtained: arr.skip(2)
- TestType: JavaQuery
  TestFile: regression/354.yaml
  TestNum: 3
  Original: err("ReqlQueryLogicError", "Expected type NUMBER but found STRING.", [1])
  ExpectedType: Err
  ExpectedJava: err("ReqlQueryLogicError", "Expected type NUMBER but found STRING.", Arrays.asList(1))
  Obtained: arr.skip("a")
- TestType: JavaQuery
  TestFile: regression/354.yaml
  TestNum: 4
  Original: err("ReqlQueryLogicError", "Expected type NUMBER but found ARRAY.", [1])
  ExpectedType: Err
  ExpectedJava: err("ReqlQueryLogicError", "Expected type NUMBER but found ARRAY.", Arrays.asList(1))
  Obtained: arr.skip(Arrays.asList(1, 2, 3))
- TestType: JavaQuery
  TestFile: regression/354.yaml
  TestNum: 5
  Original: err("ReqlQueryLogicError", "Expected type NUMBER but found OBJECT.", [0, 1])
  ExpectedType: Err
  ExpectedJava: err("ReqlQueryLogicError", "Expected type NUMBER but found OBJECT.", Arrays.asList(0, 1))
  Obtained: arr.skip(new MapObject()).count()
- TestType: JavaQuery
  TestFile: regression/354.yaml
  TestNum: 6
  Original: err("ReqlNonExistenceError", "Expected type NUMBER but found NULL.", [1])
  ExpectedType: Err
  ExpectedJava: err("ReqlNonExistenceError", "Expected type NUMBER but found NULL.", Arrays.asList(1))
  Obtained: arr.skip(null)
