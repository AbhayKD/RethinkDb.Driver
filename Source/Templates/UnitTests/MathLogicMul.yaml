ModuleName: MathLogicMul
Description: Tests for the basic usage of the multiplication operation
DefsAndTests:
- TestType: JavaQuery
  TestFile: math_logic/mul.yaml
  LineNum: 6
  Original: r.expr(1) * 2
  Java: r.expr(1L).mul(2L)
  ExpectedOriginal: 2
  ExpectedType: Long
  ExpectedJava: 2L
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/mul.yaml
  LineNum: 7
  Original: 1 * r.expr(2)
  Java: r.mul(1L, r.expr(2L))
  ExpectedOriginal: 2
  ExpectedType: Long
  ExpectedJava: 2L
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/mul.yaml
  LineNum: 8
  Original: r.expr(1).mul(2)
  Java: r.expr(1L).mul(2L)
  ExpectedOriginal: 2
  ExpectedType: Long
  ExpectedJava: 2L
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/mul.yaml
  LineNum: 15
  Original: r.expr(-1) * -1
  Java: r.expr(-1L).mul(-1L)
  ExpectedOriginal: 1
  ExpectedType: Long
  ExpectedJava: 1L
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/mul.yaml
  LineNum: 21
  Original: r.expr(1.5) * 4.5
  Java: r.expr(1.5).mul(4.5)
  ExpectedOriginal: 6.75
  ExpectedType: Double
  ExpectedJava: 6.75
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/mul.yaml
  LineNum: 25
  Original: r.expr([1,2,3]) * 3
  Java: r.expr(r.array(1L, 2L, 3L)).mul(3L)
  ExpectedOriginal: '[1,2,3,1,2,3,1,2,3]'
  ExpectedType: List
  ExpectedJava: r.array(1L, 2L, 3L, 1L, 2L, 3L, 1L, 2L, 3L)
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/mul.yaml
  LineNum: 30
  Original: r.expr(1).mul(2,3,4,5)
  Java: r.expr(1L).mul(2L, 3L, 4L, 5L)
  ExpectedOriginal: 120
  ExpectedType: Long
  ExpectedJava: 120L
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/mul.yaml
  LineNum: 46
  Original: r.expr('a') * 0.8
  Java: r.expr("a").mul(0.8)
  ExpectedOriginal: err('ReqlQueryLogicError', 'Expected type NUMBER but found STRING.', [0])
  ExpectedType: Err
  ExpectedJava: err("ReqlQueryLogicError", "Expected type NUMBER but found STRING.", r.array(0L))
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/mul.yaml
  LineNum: 50
  Original: r.expr(1) * 'a'
  Java: r.expr(1L).mul("a")
  ExpectedOriginal: err('ReqlQueryLogicError', 'Expected type NUMBER but found STRING.', [1])
  ExpectedType: Err
  ExpectedJava: err("ReqlQueryLogicError", "Expected type NUMBER but found STRING.", r.array(1L))
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/mul.yaml
  LineNum: 54
  Original: r.expr('b') * 'a'
  Java: r.expr("b").mul("a")
  ExpectedOriginal: err('ReqlQueryLogicError', 'Expected type NUMBER but found STRING.', [0])
  ExpectedType: Err
  ExpectedJava: err("ReqlQueryLogicError", "Expected type NUMBER but found STRING.", r.array(0L))
  RunOpts: []
- TestType: JavaQuery
  TestFile: math_logic/mul.yaml
  LineNum: 58
  Original: r.expr([]) * 1.5
  Java: r.expr(r.array()).mul(1.5)
  ExpectedOriginal: 'err(''ReqlQueryLogicError'', ''Number not an integer: 1.5'', [0])'
  ExpectedType: Err
  ExpectedJava: 'err("ReqlQueryLogicError", "Number not an integer: 1.5", r.array(0L))'
  RunOpts: []
